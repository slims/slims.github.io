"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7747],{3905:(e,a,n)=>{n.d(a,{Zo:()=>b,kt:()=>d});var t=n(7294);function l(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){l(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var m=t.createContext({}),u=function(e){var a=t.useContext(m),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},b=function(e){var a=u(e.components);return t.createElement(m.Provider,{value:a},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},s=t.forwardRef((function(e,a){var n=e.components,l=e.mdxType,i=e.originalType,m=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),p=u(n),s=l,d=p["".concat(m,".").concat(s)]||p[s]||c[s]||i;return n?t.createElement(d,r(r({ref:a},b),{},{components:n})):t.createElement(d,r({ref:a},b))}));function d(e,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=s;var o={};for(var m in a)hasOwnProperty.call(a,m)&&(o[m]=a[m]);o.originalType=e,o[p]="string"==typeof e?e:l,r[1]=o;for(var u=2;u<i;u++)r[u]=n[u];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}s.displayName="MDXCreateElement"},9911:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>m,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var t=n(7462),l=(n(7294),n(3905));const i={},r=void 0,o={unversionedId:"Database/Schema",id:"Database/Schema",title:"Schema",description:"Fitur yang digunakan untuk mengelola struktur basis data SLiMS seperti menambah, menghapus, merubah dll. Fitur ini biasa digunakan pada proses migrasi di sistem plugin.",source:"@site/development-guide/05-Database/05-Schema.md",sourceDirName:"05-Database",slug:"/Database/Schema",permalink:"/docs/development-guide/Database/Schema",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Membuat Ekstensi",permalink:"/docs/development-guide/Database/Membuat Ekstensi"},next:{title:"Penjelasan",permalink:"/docs/development-guide/Console/Intro"}},m={},u=[{value:"Penggunaan",id:"penggunaan",level:2},{value:"Membuat tabel",id:"membuat-tabel",level:3},{value:"Menghapus tabel",id:"menghapus-tabel",level:3},{value:"Mengosongkan tabel",id:"mengosongkan-tabel",level:3},{value:"Mengubah kolom pada tabel",id:"mengubah-kolom-pada-tabel",level:3},{value:"Mendapatkan meta data dari subah Tabel dan Kolom",id:"mendapatkan-meta-data-dari-subah-tabel-dan-kolom",level:3}],b={toc:u};function p(e){let{components:a,...n}=e;return(0,l.kt)("wrapper",(0,t.Z)({},b,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Fitur yang digunakan untuk mengelola struktur basis data SLiMS seperti menambah, menghapus, merubah dll. Fitur ini biasa digunakan pada proses migrasi di sistem plugin."),(0,l.kt)("h2",{id:"penggunaan"},"Penggunaan"),(0,l.kt)("h3",{id:"membuat-tabel"},"Membuat tabel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nuse SLiMS\\Table\\Schema;\nuse SLiMS\\Table\\Blueprint;\n\nfunction up()\n{\n    // Membuat tabel\n    Schema::create('read_counter', function(Blueprint $table){\n        // Format : {object_blueprint} -> {tipe_kolom} -> {isi bawaan}\n\n        // storage engine\n        $table->engine = 'MyISAM';\n\n        // character set\n        $table->charset = 'utf8mb4';\n\n        // Collate\n        $table->collation = 'utf8mb4_unicode_ci';\n\n        // membuat kolom beranam id dengan fungsi ikrement\n        $table->autoIncrement('id');\n\n        // membuat kolom bernama item_code tipe varchar dengan\n        // lebar data 20 dan tidak nulll\n        $table->string('item_code', 20)->notNull();\n        $table->string('title', 255)->notNull();\n        \n        // Membuat kolom dengan tipe datetime bernama created_at\n        $table->datetime('created_at')->notNull();\n\n        // pentunjuk selengkapnya ada di lib/Table/Blueprint.php\n    });\n}\n")),(0,l.kt)("h3",{id:"menghapus-tabel"},"Menghapus tabel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nuse SLiMS\\Table\\Schema;\nuse SLiMS\\Table\\Blueprint;\n\nfunction down()\n{\n    // Membuat tabel\n    Schema::drop('read_counter');\n}\n")),(0,l.kt)("h3",{id:"mengosongkan-tabel"},"Mengosongkan tabel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-PHP"},"<?php\nuse SLiMS\\Table\\Schema;\nuse SLiMS\\Table\\Blueprint;\n\nfunction down()\n{\n    // Membuat tabel\n    Schema::truncate('read_counter');\n}\n")),(0,l.kt)("h3",{id:"mengubah-kolom-pada-tabel"},"Mengubah kolom pada tabel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nuse SLiMS\\Table\\Schema;\nuse SLiMS\\Table\\Blueprint;\n\nfunction down()\n{\n    // Membuat tabel\n    Schema::table('read_counter', function(Blueprint $table){\n        // Format : {object_blueprint} -> {tipe_kolom} -> {isi bawaan} -> {pernyataan (drop,change, add)}\n\n        // Merubah lebar data\n        $table->string('item_code', 50)->notNull()->change();\n\n        // Menghapus kolom\n        $table->drop('kolom_test');\n\n        // Menambah kolom baru\n        $table->string('gmd', 5)->nullable()->after('title')->add();\n    });\n}\n")),(0,l.kt)("h3",{id:"mendapatkan-meta-data-dari-subah-tabel-dan-kolom"},"Mendapatkan meta data dari subah Tabel dan Kolom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nuse SLiMS\\Table\\Schema;\nuse SLiMS\\Table\\Blueprint;\n\nfunction up()\n{\n    // Ketersediaan\n    Schema::table('biblio')->isExists(); // mengecek ketersediaan tabel\n    Schema::table('biblio')->isEmpty();\n    Schema::table('biblio')->column('title')->isExists(); // mengecek ketersediaan kolom title pada tabel biblio\n\n    // Tipe data\n    Schema::table('biblio')->column('title')->isNull(); // cek apakah isi bawaan mua itu null?\n    Schema::table('biblio')->column('title')->isPrimary(); // apakah kolom tersebut adalah primary?\n    Schema::table('biblio')->column('title')->isUnique(); // apakah kolom title memiliki key unique?\n    Schema::table('biblio')->column('title')->isFullText(); // apakah kolom teks menggunakan key full text\n    Schema::table('biblio')->column('title')->isAutoincrement(); // apakah nilai kolom title bertambah setiap ada databaru?\n\n    // mengambil informasi tabel\n    Schema::table('biblio')->getEngine(); // mendapat kan storage engine . Contoh : MyISAM,Aria,InnoDB\n    Schema::table('biblio')->getRowCount(); // medapatkan jumlah baris pada tabel\n    Schema::table('biblio')->getCollation(); // mendapatkan kolasi dari tabel\n    Schema::table('biblio')->getAutoincrement(); // mendapatkan nilai terakhir dari AutoIncrement\n    Schema::table('biblio')->getComment()); // mendapatkan komentar pada tabel\n\n    // mengambil informasi kolom\n    Schema::table('biblio')->column('title')->getType(); // mendapatkan tipe data. Contoh : varchar dll\n    Schema::table('biblio')->column('title')->getPosition(); // mendapatkan posisi lokasi kolom pada tabel tersebut\n    Schema::table('biblio')->column('title')->getCollation(); // medapatkan kolasinya\n    Schema::table('biblio')->column('title')->getAutoincrement(); // mendapatkan status apakah dia auto increment atau tidak\n    Schema::table('biblio')->column('title')->getComment(); // mendapatkan komentar\n    Schema::table('biblio')->column('title')->getMaxLength(); // mendapatkan panjang maksimal dari kolom tersebut.\n    Schema::table('biblio')->column('title')->getKey(); // mendapatkan key, seperti PrimaryKey, Unique, Index, Mul\n}\n")))}p.isMDXComponent=!0}}]);