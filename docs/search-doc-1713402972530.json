[{"title":"Harno","type":0,"sectionRef":"#","url":"/docs/blog/2021/08/26/welcome/sub/test","content":"","keywords":""},{"title":"Welcome","type":0,"sectionRef":"#","url":"/docs/blog/welcome","content":"","keywords":""},{"title":"First Blog Post","type":0,"sectionRef":"#","url":"/docs/blog/first-blog-post","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":""},{"title":"OPAC","type":0,"sectionRef":"#","url":"/docs/development-guide/Alur/OPAC","content":"OPAC Berikut alur kerja OPAC SLiMS. Selengkahpnya unduh file dalam format PDF.","keywords":"SLiMS Flowchart OPAC Flow SLiMS Flow"},{"title":"Preambul","type":0,"sectionRef":"#","url":"/docs/development-guide/about","content":"","keywords":""},{"title":"Pengantar​","type":1,"pageTitle":"Preambul","url":"/docs/development-guide/about#pengantar","content":"Halaman ini berisi dokumentasi untuk membangun SLiMS anda menjadi seperti apa yang anda inginkan, seperti membuat datagrid, reportgrid, grid yang dapat di cetak dan formulr melalui sistem plugin secara native atau berbasis composer "},{"title":"Memulai​","type":1,"pageTitle":"Preambul","url":"/docs/development-guide/about#memulai","content":"Prasyarat: XAMPP/LAMPP/MAMPP/etc.PHP 8.1 atau lebih tinggiMySQL 5.7 atau lebih tinggi | MariaDB 10.3 atau lebih tinggiCode Editor : VSCode | VSCodium | Sublime | dllSLiMS terbaru atau menggunakan versi SLiMS Develop (jika anda ingin fitur terbaru sembari mengetes fitur tersebut anda disarankan menggunakan versi develop). "},{"title":"Mengubah Environment / lingkungan​","type":1,"pageTitle":"Preambul","url":"/docs/development-guide/about#mengubah-environment--lingkungan","content":"Tahap ini penting karena tanpa merubah environment dari prodcution ke development maka kita tidak tahu pesan error yang terjadi ketika melakukan development pada SLiMS kita. Berikut langkahnya: Buka modul system lalu pilih menu System Environment Setting / Setelan Lingkungan SistemMaka akan muncul sebagai berikut: Ubah nilai production ke development lalu klik Save Settings / Simpan Pengaturan.Jika langkah ke 3 berhasil maka muncul seperti berikut:setiap modul di SLiMS jika menggunakan datagrid/form maker maka akan muncul kotak yang ditandai merah seperti diatas. Kegunaan dari box tersebut yaitu untuk melihat proses/error apa yang terjadi karena secara bawaan proses penyimpanan dilemparkan ke elemen &lt;iframe&gt;&lt;/iframe&gt; "},{"title":"Plugin","type":0,"sectionRef":"#","url":"/docs/development-guide/Alur/Plugin","content":"Plugin Berikut alur kerja Plugin SLiMS. Selengkahpnya unduh file dalam format PDF.","keywords":"Plugins SLiMS SLiMS Plugin Flow Flow of SLIMS Plugin"},{"title":"Penjelasan","type":0,"sectionRef":"#","url":"/docs/development-guide/Console/Intro","content":"Penjelasan Console merupakan fitur SLiMS yang terinspirasi dari fitur Laravel Artisan yang digunakan untuk kebutuhan belakang layar seperti backup terjadwal, pengiriman surel keterlambatan peminjaman secara masal dll. Hadir sejak versi 9.6.0 memberikan anda keleluasaan dalam mengembangkan SLiMS sesuai kebutuhan anda.","keywords":""},{"title":"Long Blog Post","type":0,"sectionRef":"#","url":"/docs/blog/long-blog-post","content":"This is the summary of a very long blog post, Use a &lt;!-- truncate --&gt; comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":""},{"title":"Cara penggunaan","type":0,"sectionRef":"#","url":"/docs/development-guide/Console/cara-penggunaan","content":"","keywords":""},{"title":"Ekstensi Database","type":0,"sectionRef":"#","url":"/docs/development-guide/Database/Ekstensi","content":"","keywords":"database slins konfigurasi database di SLiMS"},{"title":"Query​","type":1,"pageTitle":"Ekstensi Database","url":"/docs/development-guide/Database/Ekstensi#query","content":"Ekstensi ini memanfaatkan PDO sebagai media untuk berinteraksi dengan database. "},{"title":"Penggunaan​","type":1,"pageTitle":"Ekstensi Database","url":"/docs/development-guide/Database/Ekstensi#penggunaan","content":"use SLiMS\\DB; // penulisan dasar $biblio = DB::query('select * from biblio'); foreach($biblio as $data) { echo $data['biblio_id'] . ' : ' . $data['title'] . PHP_EOL; }  atau jika anda hendak mengimplementasikan beberapa masukan seperti $_POST|$_GET. $biblio = DB::query('select * from biblio where biblio_id = ?', [$_POST['id']]);  skrip diatas menerapkan PDOStatement sebelum data diproses. "},{"title":"Opsi​","type":1,"pageTitle":"Ekstensi Database","url":"/docs/development-guide/Database/Ekstensi#opsi","content":"Beberapa opsi yang dapat digunakan yaitu: setConnection : mengatur profil koneksi yang akan digunakansetDefaultOutput : mengatur tipe data yang di olah seperti PDO::FETCH_OBJ dll (bawaan : PDO::FETCH_ASSOC);first : mengambil data pertamalast : mengambil data terakhir Mengatur koneksi​ lihat pada referensi sebelumnya mengenai manajemen koneksi $biblio-&gt;setConnection('non-default');  Mengatur keluaran sebagai objek​ $biblio-&gt;setDefaultOutput(PDO::FETCH_OBJ);  "},{"title":"Tarsius","type":0,"sectionRef":"#","url":"/docs/development-guide/Console/Tarsius","content":"Tarsius Tarsius atau Krabuku merupakan nama hewan primata khas asia tenggara yang menjadi maskot dari SLiMS. Tak hanya menjadi maskot nama tarsius juga digunakan sebagai program baris perintah/Command Line Interface untuk melakukab proses kerja di balik layar / background process seperti menyalin basisdata / backup database, mengirim surel/ E-Mail . Pada mulanya anda diperkenalkan fitur Console sebagai berikut pada terminal/konsol anda: php index.php Alternatif lainnya yaitu anda dapat menggunakan tarsius. Cara sebagai berikutL: php index.php tarsius Maka SLiMS akan membuat file baru di folder utama aplikasi ini yang bernama tarsius. Setelah itu anda dapat berinteraksi dengan SLiMS dengan format php tarsius ","keywords":""},{"title":"MDX Blog Post","type":0,"sectionRef":"#","url":"/docs/blog/mdx-blog-post","content":"Blog posts support Docusaurus Markdown features, such as MDX. tip Use the power of React to create interactive blog posts. &lt;button onClick={() =&gt; alert('button clicked!')}&gt;Click me!&lt;/button&gt; Click me!","keywords":""},{"title":"Pengantar​","type":1,"pageTitle":"Cara penggunaan","url":"/docs/development-guide/Console/cara-penggunaan#pengantar","content":"Fitur ini membutuhkan antarmuka berbasis perintah atau sering dikenal dengan CLi. Maka anda diwajibkan sudah paham terkait penggunaan aplikasi pendukung fitur ini seperti pada Micrsoft Windows: Command Prompt, Windows Terminal atau PowerShell, pada GNU Linux: Terminal, Konsol, dll. "},{"title":"Langkah memulai​","type":1,"pageTitle":"Cara penggunaan","url":"/docs/development-guide/Console/cara-penggunaan#langkah-memulai","content":"Buka konsole anda (Command Prompt dll)Masuk kedalam folder : cd &lt;slims-root&gt;/. Contoh nya cd /var/www/html/slims9_bulianketik : php index.php, maka akan muncul keluaran sebagai berikut:  "},{"title":"Praktik Penggunaan​","type":1,"pageTitle":"Cara penggunaan","url":"/docs/development-guide/Console/cara-penggunaan#praktik-penggunaan","content":"Terdapat beberapa perintah yang tersedia seperti status, db dan plugins. Berikut ini contoh cara penggunaannya. Menampilkan status SLiMS​ php index.php status   Menampilkan daftar plugin yang aktif​ php index.php plugin:list   "},{"title":"Penjelasan​","type":1,"pageTitle":"Cara penggunaan","url":"/docs/development-guide/Console/cara-penggunaan#penjelasan","content":"format penulisan perintah pada SLiMS Console  php index.php [perintah] [opsi] Contoh: php index.php plugin:list --type=all Keterangan php : perintah PHP pada konsole anda, php.exe pada sistem operasi windowsindex.php : file yang berisi skrip PHP yang mengelola perintah plugin:listplugin:list : merupakan nama perintah + sub perintah nya. Jadi anda dapat membuat variasi perintah yang saling berkaitan, semisal dalam perntah plugin anda dapat memecah nya menjadi beberapa sub perintah seperti :list,:detail, :activate, dan :deactivate yang berdiri sendiri namun memiliki nama awalan yang sama yaitu plugin. Namun pemecahan sebuah perintah menjadi sub-perintah tidak lah wajib. Apabila anda ingin perintah yang tunggal tidak perlu menambahkan akhiran seperti yang ada diatas. Contoh nya adalah perintah status.--type=all : opsi yang tersedia pada perintah tersebut yang memberitahu bahwa anda meminta daftar plugin secara lengkap menggunakan kriteria plugin yang aktif dan tidak aktif. Karena opsional maka penulisan ini tidak wajib digunakan. "},{"title":"Membuat provider anda sendiri","type":0,"sectionRef":"#","url":"/docs/development-guide/Cache/membuat-provider","content":"Membuat provider anda sendiri Contoh kita akan membuat provider terkait Cache yang disimpan pada Redis. &lt;?php class RedisCache extends \\SLiMS\\Cache\\Contract { private $options = null; /** * Register all options * * @param string $directory */ public function __construct($optios) { $this-&gt;options = $options; } /** * Create a new cache files/value * * @param string $cacheName * @param mixed $contents * @return void */ public function set(string $cacheName, $contents) { // tulis disini kode anda } /** * Get cache value * * @param string $cacheName * @param string $callBack * @return mixed */ public function get(string $cacheName, $callBack = '') { // tulis disini kode anda } /** * Update cache value * * @param string $cacheName * @param mixed $contents * @return bool */ public function put(string $cacheName, $contents) { // tulis disini kode anda } /** * Delete cache * * @param string $cacheName * @return void */ public function destroy(string $cacheName) { // tulis disini kode anda } /** * Make cache clean as soon as posible * * @return void */ public function purge() { // tulis disini kode anda } /** * Get path or key of cache * * @return string */ public function getPath() { // tulis disini kode anda } /** * Get cache as list * * @return array */ public function getList() { // tulis disini kode anda } /** * @return boolean */ public function isExists(string $cacheName) { // tulis disini kode anda } } /** * Jika sudah membuat class seperti diatas, maka anda harus mendaftarkan provider anda * pada file config/cache.php pada opsi providers dengan format sebagai berikut * * 'Redis' =&gt; [ * 'class' =&gt; &lt;another-cache-provider-namespace&gt; * 'options' =&gt; [ * 'prefix' =&gt; 'SLiMSCache:' * ] * ] */ ","keywords":""},{"title":"Membuat Command Anda Sendiri","type":0,"sectionRef":"#","url":"/docs/development-guide/Console/Membuat Command Sendiri","content":"","keywords":""},{"title":"Langkah-Langkah​","type":1,"pageTitle":"Membuat Command Anda Sendiri","url":"/docs/development-guide/Console/Membuat Command Sendiri#langkah-langkah","content":"Siapkan terminal anda terlebih dahulu, lalu masuk ke dalam direktori SLiMS cd direktori/slims/anda/ Lalu ketik perintah sebagai berikut: php tarsius make:command MailOverdue baris perintah diatas akan memberitahu SLiMS untuk membuat sebuah Command yang bernama Mail.php yang nanti akan tersimpan di direktori plugins/Commands/. Buka file Mail.php pada folder plugins/Commands. Maka anda kan melihat skrip sebagai berikut: &lt;?php namespace Commands; use SLiMS\\Cli\\Command; class MailOverdue extends Command { /** * Signature is combination of command name * argument and options * * @var string */ protected string $signature = 'command:name'; /** * Command description * * @var string */ protected string $description = 'Command description'; /** * Handle command process * * @return void */ public function handle() { // write your code here } } Penjelasan: Nama objek​ class MailOverdue extends Command Kata MailOverdue berasal dari nama yang anda tulis pada langkah ke 2 Signature​ protected string $signature = 'command:name'; ini merupakan ciri khas dari command yang anda buat. Maka anda bisa mengganti nya menjadi yang lain. Contohnya protected string $signature = 'mail:overdue'; signature dapat berbentuk kata tunggal atau lebih. Jika anda membuat signature dengan lebih dari satu maka anda perlu memisahkannya dengan tanda &quot;:&quot; (titik dua) seperti diatas. Penggunan karakter pemisah disini digunakan untuk memberitahu SLiMS bahwa anda membuat Command yang topik nya sama namun tugas nya berbeda-beda contoh : Pada gambar diatas anda dapat melihat terdapat Command yang sama yaitu db namun memiliki tugas yang berbeda. Description​ protected string $description = 'Command description'; Ini merupakan kalimat deskripsi untuk Command anda yang bertujuan untuk menginformasikan ke pada anda/pengguna lain mengenai cara kerjanya. Dapat anda rubah misalkan seperti berikut: protected string $description = 'Untuk mengirim email keterlambatan peminjaman anggota'; Handle​ public function handle() { // write your code here } Bagian ini merupakan tempat dimana anda meletakan segala macam proses yang akan anda lakukan, karena pada contoh ini anda membuat Command yang berkaitan dengan E-Mail maka anda dapat memanfaatkan pustaka \\SLiMS\\Mail yang ada di SLiMS. "},{"title":"Implementasi​","type":1,"pageTitle":"Membuat Command Anda Sendiri","url":"/docs/development-guide/Console/Membuat Command Sendiri#implementasi","content":"php tarsius mail:overdue  "},{"title":"Penggunaan","type":0,"sectionRef":"#","url":"/docs/development-guide/Cache/Penggunaan","content":"","keywords":""},{"title":"Metoda yang tersedia (Pada Provider Files dan Database)​","type":1,"pageTitle":"Penggunaan","url":"/docs/development-guide/Cache/Penggunaan#metoda-yang-tersedia-pada-provider-files-dan-database","content":""},{"title":"Membuat cache baru​","type":1,"pageTitle":"Penggunaan","url":"/docs/development-guide/Cache/Penggunaan#membuat-cache-baru","content":"&lt;?php use SLiMS\\Cache; /** * cacheName @string * contents @string|integer|array|objek * yang nanti akan disimpan dalam format JSON */ Cache::set(cacheName: 'namacache', 'content');  "},{"title":"Mengambil cache yang sudah ada​","type":1,"pageTitle":"Penggunaan","url":"/docs/development-guide/Cache/Penggunaan#mengambil-cache-yang-sudah-ada","content":"&lt;?php use SLiMS\\Cache; /** * cacheName @string * callBack @closure optional */ Cache::get(cacheName: 'namacache', callBack: 'fungsi_kustom_anda');  "},{"title":"Memperbaharui cache yang sudah ada​","type":1,"pageTitle":"Penggunaan","url":"/docs/development-guide/Cache/Penggunaan#memperbaharui-cache-yang-sudah-ada","content":"&lt;?php use SLiMS\\Cache; /** * cacheName @string * contents @string|integer|array|objek * yang nanti akan disimpan dalam format JSON */ Cache::put(cacheName: 'namacache', contents: 'content');  "},{"title":"Menghapus cache yang sudah ada​","type":1,"pageTitle":"Penggunaan","url":"/docs/development-guide/Cache/Penggunaan#menghapus-cache-yang-sudah-ada","content":"&lt;?php use SLiMS\\Cache; /** * cacheName @string */ Cache::destroy(cacheName: 'namacache');  "},{"title":"Mengkosongkan|Menghapus semua cache​","type":1,"pageTitle":"Penggunaan","url":"/docs/development-guide/Cache/Penggunaan#mengkosongkanmenghapus-semua-cache","content":"&lt;?php use SLiMS\\Cache; Cache::purge();  "},{"title":"Menampilkan semua cache yang tersimpan​","type":1,"pageTitle":"Penggunaan","url":"/docs/development-guide/Cache/Penggunaan#menampilkan-semua-cache-yang-tersimpan","content":"&lt;?php use SLiMS\\Cache; Cache::getList();  "},{"title":"Mengecek eksistensi cache​","type":1,"pageTitle":"Penggunaan","url":"/docs/development-guide/Cache/Penggunaan#mengecek-eksistensi-cache","content":"&lt;?php use SLiMS\\Cache; /** * cacheName @string */ Cache::isExists(cacheName: 'namacache');  "},{"title":"Metoda yang hanya tersedia di Provider Database​","type":1,"pageTitle":"Penggunaan","url":"/docs/development-guide/Cache/Penggunaan#metoda-yang-hanya-tersedia-di-provider-database","content":""},{"title":"Mengecek apakah cache sudah kedaluwarsa​","type":1,"pageTitle":"Penggunaan","url":"/docs/development-guide/Cache/Penggunaan#mengecek-apakah-cache-sudah-kedaluwarsa","content":"&lt;?php use SLiMS\\Cache; /** * cacheName @string * terkait pengaturan/opsi kedaluwarsa nya anda * dapat melihat nya di config/cache.php pada * providers database */ Cache::isExpire(cacheName: 'namacache');  "},{"title":"Mengupdate cache jika sudah kedaluwarsa​","type":1,"pageTitle":"Penggunaan","url":"/docs/development-guide/Cache/Penggunaan#mengupdate-cache-jika-sudah-kedaluwarsa","content":"&lt;?php use SLiMS\\Cache; /** * cacheName @string * contents @string|integer|array|objek * * sama dengan metoda Cache::put hanya saja ini * dikombinasikan dengan pengecak kedaluwarsa. */ Cache::putIfExpire(cacheName: 'namacache', contents: 'content');  "},{"title":"Permulaan","type":0,"sectionRef":"#","url":"/docs/development-guide/Database/Intro","content":"","keywords":"database slins konfigurasi database di SLiMS"},{"title":"Ihwal​","type":1,"pageTitle":"Permulaan","url":"/docs/development-guide/Database/Intro#ihwal","content":"SLiMS menggunakan MySQL/MariaDB sebagai default RDMS (Relational Database Management System) untuk menyimpan data. Adapun ini tidak menutup bahwa SLiMS tidak dapat menggunakan database selain RDBMS. Pada kasus tertentu SLiMS dapat diintegrasikan dengan database No-SQL seperti Redis, ElasticSearch, SOLR, dan MeiliSearch dll bergantung kepada kebutuhan masing-masing pengguna. "},{"title":"Konfigurasi​","type":1,"pageTitle":"Permulaan","url":"/docs/development-guide/Database/Intro#konfigurasi","content":"Konfigurasi mengenai database di SLiMS tersimpan di config/database.php. File tersebut terbentuk secara otomatis ketika anda pertama kali menginstall SLiMS melalui installer bawaan dari SLiMS. Namun, anda dapat mengubahnya secara manual jika memang memungkinkan. Berikut isi dari file tersebut: &lt;?php return [ /** * Default database node profile */ 'default_profile' =&gt; 'SLiMS', /** * SLiMS as Service, One SLiMS for many library * ---------------------------------------------------- * * Switching database node access based on rule, * such as domain, ip, port etc * * How to : * 1. make file with name database_proxy.php in config/ * 2. make your own rule in that file. * 3. change this value to true */ 'proxy' =&gt; false, /** * Nodes profile */ 'nodes' =&gt; [ 'SLiMS' =&gt; [ 'host' =&gt; '_DB_HOST_', 'database' =&gt; '_DB_NAME_', 'port' =&gt; '_DB_PORT_', 'username' =&gt; '_DB_USER_', 'password' =&gt; '_DB_PASSWORD_', 'options' =&gt; [ 'storage_engine' =&gt; '_STORAGE_ENGINE_' ] ] ] ];  Keterangan: _DB_HOST_ : Merupakan alamat IP/Host dari mesidn MySQL/MariaDB yang anda gunakan._DB_NAME_ : Nama database yang akan digunakan._DB_PORT_ : Port database yang digunakan. Secara bawaan MySQL/MariaDB menggunakan port 3306._DB_USER_ : Nama pengguna yang digunakan untuk berkomunikasi dengan MySQL/MariaDB._DB_PASSWORD_ : Kata sandi dari nama pengguna yang digunakan. Terkait _STORAGE_ENGINE_ bersifat opsional yang berisi nama storage engine yang digunakan oleh SLiMS pada MySQL/MariaDB. Menambahkan koneksi lain​  .... 'nodes' =&gt; [ 'SLiMS' =&gt; [ 'host' =&gt; '_DB_HOST_', 'database' =&gt; '_DB_NAME_', 'port' =&gt; '_DB_PORT_', 'username' =&gt; '_DB_USER_', 'password' =&gt; '_DB_PASSWORD_', 'options' =&gt; [ 'storage_engine' =&gt; '_STORAGE_ENGINE_' ] ], 'non-default' =&gt; [ 'host' =&gt; '_DB_HOST_', 'database' =&gt; '_DB_NAME_', 'port' =&gt; '_DB_PORT_', 'username' =&gt; '_DB_USER_', 'password' =&gt; '_DB_PASSWORD_', 'options' =&gt; [ 'storage_engine' =&gt; '_STORAGE_ENGINE_' ] ], // tambahkan yang lain ]  "},{"title":"Permulaan","type":0,"sectionRef":"#","url":"/docs/development-guide/Http/Client/Permulaan","content":"","keywords":""},{"title":"Prasyarat​","type":1,"pageTitle":"Permulaan","url":"/docs/development-guide/Http/Client/Permulaan#prasyarat","content":"Berikut beberapa prasyarat yang harus anda lengkapi sebelum memulai: Dasar pengolahan dataMemahami basic Http RequestPHP OOP "},{"title":"Stream File","type":0,"sectionRef":"#","url":"/docs/development-guide/Http/Client/stream-file","content":"","keywords":""},{"title":"Penggunaan​","type":1,"pageTitle":"Stream File","url":"/docs/development-guide/Http/Client/stream-file#penggunaan","content":"$url = 'https://slims.web.id/web/site/templates/assets/images/logo.png'; Client::stream($url); // jika dengan opsi lain Client::stream($url, [ 'headers' =&gt; [ 'X-Token' =&gt; 'aksdjflkajdfiuokljlkqweq' ] ]);  "},{"title":"Struktur Direktori","type":0,"sectionRef":"#","url":"/docs/development-guide/directorystructure","content":"Struktur Direktori /your-slims-path/ │ # Admin Area ├── admin # Admin Area │ # Web Template │ ├── admin_template # Web Template │ # SLiMS default bootstrap file │ ├── default │ # All automation component │ # store in this folder │ └── modules │ # Web Service ├── api │ └── v1 │ # SLiMS configuration │ # store into this folder ├── config ├── css ├── files │ ├── backup │ ├── cache │ ├── chat │ ├── membercard │ ├── reports │ └── swfs ├── help │ ├── en_US │ ├── es_ES │ └── id_ID ├── images │ ├── barcodes │ ├── cache │ ├── default │ ├── docs │ ├── labels │ └── persons ├── indexing_engine ├── install ├── js │ ├── chartjs │ ├── chosen │ ├── ckeditor5 │ ├── colorbox │ ├── datepicker │ ├── flowplayer │ ├── ion.rangeSlider │ ├── jquery.imgareaselect │ ├── pdfjs │ ├── plyr │ ├── quaggaJS │ └── toastr ├── lib │ ├── Cache │ ├── collection │ ├── contents │ ├── csrf │ ├── ezyang │ ├── flex │ ├── guzzlehttp │ ├── Http │ ├── lang │ ├── maennchen │ ├── Mail │ ├── marc │ ├── markbaker │ ├── math │ ├── Migration │ ├── minigalnano │ ├── myclabs │ ├── mysqldump-php │ ├── nesbot │ ├── oaipmh │ ├── parsedown │ ├── phpbarcode │ ├── phplot │ ├── PHPMailer │ ├── phpoffice │ ├── psr │ ├── ralouphie │ ├── recaptcha │ ├── SearchEngine │ ├── Session │ ├── sphinx │ ├── symfony │ ├── Table │ ├── uuid │ └── Zend ├── m ├── plugins │ ├── label_barcode │ ├── read_counter ├── repository ├── sample ├── simbio2 │ ├── simbio_DB │ ├── simbio_FILE │ ├── simbio_GUI │ └── simbio_UTILS ├── src │ └── Slims ├── template │ ├── akasia │ ├── akasia-dz │ ├── default │ ├── libdikbud │ └── lightweight └── upgrade └── old_sql ","keywords":""},{"title":"Download File","type":0,"sectionRef":"#","url":"/docs/development-guide/Http/Client/download-file","content":"","keywords":""},{"title":"Penggunaan​","type":1,"pageTitle":"Download File","url":"/docs/development-guide/Http/Client/download-file#penggunaan","content":"$url = 'https://slims.web.id/web/site/templates/assets/images/logo.png'; Client::download($url)-&gt;to(SB . 'images/dummy.png'); // dengan opsi Client::download($url)-&gt;to(SB . 'images/dummy.png', [ 'headers' =&gt; [ 'X-Token' =&gt; 'aksdjflkajdfiuokljlkqweq' ] ]);  "},{"title":"Membuat Ekstensi Database Anda Sendiri","type":0,"sectionRef":"#","url":"/docs/development-guide/Database/Membuat Ekstensi","content":"","keywords":"database slins konfigurasi database di SLiMS"},{"title":"Langkah-langkah​","type":1,"pageTitle":"Membuat Ekstensi Database Anda Sendiri","url":"/docs/development-guide/Database/Membuat Ekstensi#langkah-langkah","content":"Perihal modifikasi, SLiMS hadir dengan sistem plugin, maka ekstensi yang akan anda buat juga tidak akan lepas dari sistem tersebut agar perubahan yang dibuat tersenteralisasi di satu tempat yaitu direktori plugins/ maka anda perlu belajar membuat plugin dulu, setelah anda paham bagaimana membuat plugin di SLiMS berikut langkah nya membuat ekstensi: 1. Pasang/install pustaka illuminate/database menggunakan composer.​ Buat plugin anda seperti yang sudah dijelaskan pada materi sebelumnya. 2. Pasang/install pustaka illuminate/database menggunakan composer.​ composer require illuminate/database  3. Membuat file ekstensi database.​ buat file Builder.php pada folder plugin yang sudah anda buat. 4. Isi dari file Builder.php​ &lt;?php use Illuminate\\Database\\Capsule\\Manager; class Builder extends Manager { public function __construct() { parent::__construct(); $database = config('database'); $defaultDatabase = $database['default_profile']; foreach ($database['nodes'] as $name =&gt; $detail) { if (!isset($detail['driver'])) $detail['driver'] = 'mysql'; unset($detail['options']); $this-&gt;addConnection($detail, $name === $defaultDatabase ? 'default' : $name); } $this-&gt;setAsGlobal(); } }  5. Mendafarkan ekstensi​ Buka file .plugin.php pada folder plugin anda, lalu tambah skrip sebagai berikut: require __DIR__ . '/vendor/autoload.php'; require __DIR__ . '/Builder.php'; \\SLiMS\\DB::registerExtension(name: 'builder', class: Builder::class);  6. Aktifkan Plugin pada modul sistem​ "},{"title":"Cara menggunakan​","type":1,"pageTitle":"Membuat Ekstensi Database Anda Sendiri","url":"/docs/development-guide/Database/Membuat Ekstensi#cara-menggunakan","content":"Petunjuk detail penggunaannya dapat anda lihat pada dokumentasi resminya. Berikut cara menggunakan ekstensi yang anda buat: &lt;?php use SLiMS\\DB; $builder = DB::builder(); $biblio = $builder-&gt;table('biblio')-&gt;limit(10)-&gt;get(); $item = $builder-&gt;table('item')-&gt;select('biblio_id','item_code')-&gt;where('biblio_id', 1)-&gt;get();  "},{"title":"Simpulan​","type":1,"pageTitle":"Membuat Ekstensi Database Anda Sendiri","url":"/docs/development-guide/Database/Membuat Ekstensi#simpulan","content":"dengan kemampuan ini anda dapat variasi-varias mengenai database secara global dapat diakses dari banyak file di SLiMS melalui DB::class "},{"title":"Cara Penggunaan","type":0,"sectionRef":"#","url":"/docs/development-guide/Http/Client/cara-penggunaan","content":"Cara Penggunaan Untuk menggunakan pustaka HttpClient anda menggunakan sintak sebagai berikut: Permintaan dengan metoda GET​ Jika anda hendak mengambil sumber data dari layanan luar maka anda perlu menggunakan metoda GET. &lt;?php use SLiMS\\Http\\Client; $request = Client::get('https://slims.web.id/kutipan/'); Permintaan dengan metoda POST​ Jika anda hendak mengirim data ke sumber lain maka anda perlu menggunakan metoda POST. $request = Client::post('https://slims.web.id/kutipan/'); Berikut metoda yang dapat digunakan pada pustaka SLiMS\\Http\\Client: get,head,post,put,delete,options,patch Menambahkan opsi​ opsi disini merupakan opsi yang digunakan oleh pustaka guzzlehttp/guzzle. $request = Client::withOption('allow_redirects', true)-&gt;get('https://slims.web.id/kutipan/'); Menambahkan banyak opsi​ $request = Client::withOption([ 'max' =&gt; 5, 'strict' =&gt; false, 'referer' =&gt; false, 'protocols' =&gt; ['http', 'https'], 'track_redirects' =&gt; false ])-&gt;get('https://slims.web.id/kutipan/'); Menambahkan headers​ headers merupakan opsi yang dikenali oleh pustaka guzzlehttp/guzzle sebagai data http header yang akan diikut sertakan dalam proses permintaan http atau Http Request kepada layanan yang dituju. Namun anda dapat menulis headers tanpa perlu menulis dalam format withOption, cukup dengan sintak sebagai berikut: $request = Client::withHeaders([ 'Content-Type' =&gt; 'application/json', 'X-Authentication' =&gt; 'jka;sdljfaksjdflkoiopi' ])-&gt;get('https://slims.web.id/kutipan/'); Menambahkan body​ body merupakan opsi yang dikenali oleh pustaka guzzlehttp/guzzle sebagai data http body yang akan dibaca sebagai $_POST pada layanan yang dituju. Cara penulisnya tak berbeda jauh dengan withHeaders: // Mengirim body sebagai teks $request = Client::withBody(json_encode([ 'age' =&gt; 20 ]))-&gt;post('https://slims.web.id/kutipan/'); // atau dalam bentuk form $request = Client::post('https://slims.web.id/kutipan/', [ 'Age' =&gt; 20 ]); Menggabungkan options, headers dan body​ // Mengirim body sebagai teks $request = Client::withOption('max', 20) -&gt;withHeaders([ 'Content-Type' =&gt; 'application/json', 'X-Authentication' =&gt; 'jka;sdljfaksjdflkoiopi' ])-&gt;withBody(json_encode([ 'age' =&gt; 20 ]))-&gt;post('https://slims.web.id/kutipan/'); ","keywords":""},{"title":"Migration","type":0,"sectionRef":"#","url":"/docs/development-guide/Plugin/Migration","content":"","keywords":"Migration database SLiMS"},{"title":"Langkah-Langkah​","type":1,"pageTitle":"Migration","url":"/docs/development-guide/Plugin/Migration#langkah-langkah","content":"Buat sebuah folder bernama migration didalam folder anda Buat sebuah file dengan nama 1_CreateBase.php (nama bisa desuaikan). Setiap nama yang dibuat wajib diawali dengan angka dan dipisahkan dengan &quot;_&quot; (garis bawah) misalnya 2_ModifyColumn.php dst. Pemberi nomor bertujuan untuk mengurutkan proses migrasi dari awal hingga akhir dan nama setelah nomor tidak boleh ada yang sama. Buka file yang sudah anda buat lalu isinya sebagai berikut: &lt;?php use SLiMS\\Migration\\Migration; class CreateBase extends Migration { function up() { // tulis disini } function down() { // tulis disini } } Penjelasan​ Up​ function up() Metoda/method ini akan dijalan ketika plugin diaktifkan. Anda dapat meletakan proses pembuatan tabel,kolom dll yang berkaitan dengan struktur basis data SLiMS yang hendak anda ubah. Down​ function down() Kebalikan dari metoda seblumnya. Proses yang bisa anda lakukab seperti menghapus struktur tabel, tabel, kolom dll. "},{"title":"Simpulan​","type":1,"pageTitle":"Migration","url":"/docs/development-guide/Plugin/Migration#simpulan","content":"Anda dapat menulis query untuk melakukan proses migrasi dengan pustaka yang sudah disedikan oleh SLiMS seperti SLiMS\\DB contoh: function up() { \\SLiMS\\DB::getInstance()-&gt;query(&lt;&lt;&lt;SQL CREATE TABLE IF NOT EXISTS `test` { id int, nama varchar(255), nama_akhir varchar(255) } SQL); }  "},{"title":"about","type":0,"sectionRef":"#","url":"/docs/user-guide/about","content":"","keywords":""},{"title":"General Features​","type":1,"pageTitle":"about","url":"/docs/user-guide/about#general-features","content":"Online Public Access Catalog (OPAC) displays thumbnails on-the-fly. The thumbnail is useful for displaying the book cover. OPAC modes available include simple search (Simple Search) and advanced (Advanced Search) Details are also available in XML (Extensible Markup Language) record format, standard MODS for web service needs OAI - PMH features as standard data exchange Features Z39.50, SRU and p2p services to enable copy-cataloging from various libraries Efficient data management to minimize repetition of bibliographic data Management master files for referential data such as GMD (General Material Designation), Collection Type , Publisher, Author, Location, Suppliers, and others Circulation with the following features: Transactions of borrowing and returningReserve collectionFlexible lending rulesInformation on delays and fines Membership management including members' pictures capture directly in the system Collection inventory (stocktaking) Reports and statistics Management of periodicals Supports the management of multimedia documents (.FLV, .MP3) and digital documents, particularly PDFs, in streaming form SLiMS supports a variety of languages including formats that do not Latin scripts Provides a variety of languages in the interface (Indonesian, English, Spanish, Arabic, German, Bengali, Thai, etc.) Support to establish the parent catalog and federated search application: UCS and Nayanes Library visitor counter Member area, to view and download the collection was and never borrowed Notification of delays and members orders System module with the following features: Configure global system Modules Management User Management (library staff) and Access level Groups Setting holiday periods Creation of automated barcodes Backup utilities and various other features that we can not cover in this introduction. Please continue reading the following chapters for full documentation. "},{"title":"Membuat plugin modifikasi halaman tertentu di OPAC","type":0,"sectionRef":"#","url":"/docs/development-guide/Plugin/Membuat-plugin-modifikasi-halaman-pada-OPAC","content":"","keywords":"plugins slims slims plugin dokumentasi plugin SLiMS"},{"title":"Pengantar​","type":1,"pageTitle":"Membuat plugin modifikasi halaman tertentu di OPAC","url":"/docs/development-guide/Plugin/Membuat-plugin-modifikasi-halaman-pada-OPAC#pengantar","content":"Kadang kala kita membutuhkan fitur yang tidak tersedia secara bawaan di SLiMS seperti bebas pustaka dll. Beruntung nya SLiMS terkini sudah mendukung hal tersebut dimana anda dimudahkan untuk proses pembuatannya yaitu dengan sistem plugin. Berdasarkan artikel sebelumnya sistem plugin SLiMS mendukung manipulasi/membuat halaman yang sudah/belum ada di SLiMS menjadi halaman kustom yang kita inginkan tanpa perlu repot mengutak-utik file aslinya. "},{"title":"Contoh plugin modifikasi halaman yang sudah ada​","type":1,"pageTitle":"Membuat plugin modifikasi halaman tertentu di OPAC","url":"/docs/development-guide/Plugin/Membuat-plugin-modifikasi-halaman-pada-OPAC#contoh-plugin-modifikasi-halaman-yang-sudah-ada","content":"Kita tahu url &lt;url-slims-anda&gt;/?p=member merupakan halaman area anggota, dimana mereka dapat masuk dan melakukan transaksi seperti reservasi buku dll. Kasus yang akan dicontohkan bagaimana membuat halaman tersebut berisi pesan sederhana dari Pustakawan mengenai layanan yang ada. Berikut langkahnya: Buat sebuah folder baru di dalam folder plugins/ dengan nama kustom_member lalu masuk ke dalam folder tadi.Setelah itu buat file kustom_member.plugin.inc.phpIsi file tersebut dengan skrip dibawah ini: &lt;?php /** * Plugin Name: Kustom Member * Plugin URI: - * Description: Belajar membuat plugin kustom page * Version: 1.0.0 * Author: Foo * Author URI: https://foo.who */ use SLiMS\\Plugins; $plugins = Plugins::getInstance(); $plugins-&gt;registerMenu('opac', 'member', __DIR__ . '/member.inc.php');  Salin file yang berada di lib/contents/member.inc.php kedalam folder plugins/kustom_member/ Lalu buka file member.inc.php yang ada di folder plugins/kustom_member/. Kita coba untuk menambahkan sedikit informasi. Pada baris 978 atau cari skrip kurang lebih seperti ini: &lt;div&gt; &lt;div class=&quot;tagline&quot;&gt;&lt;?php echo __('Library Member Login'); ?&gt;&lt;/div&gt;  Setelah itu tambahkan skrip seperti ini &lt;div&gt; &lt;div class=&quot;alert alert-info&quot;&gt;Telah tersedia menu bebas pustaka dalam area anggota&lt;/div&gt; &lt;div class=&quot;tagline&quot;&gt;&lt;?php echo __('Library Member Login'); ?&gt;&lt;/div&gt;  Setelah itu aktifkan plugin itu pada modul System &gt; Plugin. Lalu buka halaman OPAC anda pada laman &lt;slims-url&gt;/?p=member, dan lihat apa yang terjadi 😁. Bagaimana? sudah melihat hasilnya? nah dengan ini anda sudah membuat sebuah plugin yang memodifikasi halaman yang sudah ada di SLiMS tanpa merusak sumber aslinya. "},{"title":"Contoh plugin modifikasi halaman yang belum ada​","type":1,"pageTitle":"Membuat plugin modifikasi halaman tertentu di OPAC","url":"/docs/development-guide/Plugin/Membuat-plugin-modifikasi-halaman-pada-OPAC#contoh-plugin-modifikasi-halaman-yang-belum-ada","content":"Tak berbeda jauh dengan langkah sebelumnya. Berikut langkahnya: Buat sebuah folder baru di dalam folder plugins/ dengan nama bebas_pustaka lalu masuk ke dalam folder tadi.Setelah itu buat file bebas_pustaka.plugin.phpIsi file tersebut dengan skrip dibawah ini: &lt;?php /** * Plugin Name: Bebas Pustaka * Plugin URI: - * Description: Belajar membuat plugin kustom page * Version: 1.0.0 * Author: Foo * Author URI: https://foo.who */ use SLiMS\\Plugins; $plugins = Plugins::getInstance(); $plugins-&gt;registerMenu('opac', 'bebas_pustaka', __DIR__ . '/bebas_pustaka.php');  Buat file bebas_pustaka.php pada folder yang sebelumnya dibuat.Lalu isi file tersebut dengan skrip dibawah berikut: &lt;?php echo &quot;Bebas Pustaka&quot;;  Setelah itu aktifkan plugin itu pada modul System &gt; Plugin. Lalu buka halaman OPAC anda pada laman &lt;slims-url&gt;/?p=bebas_pustaka, dan lihat apa yang terjadi 😁. Bagaimana? sudah melihat hasilnya? nah dengan ini anda sudah membuat sebuah plugin yang memodifikasi halaman yang sudah ada di SLiMS tanpa merusak sumber aslinya. "},{"title":"Keterangan​","type":1,"pageTitle":"Membuat plugin modifikasi halaman tertentu di OPAC","url":"/docs/development-guide/Plugin/Membuat-plugin-modifikasi-halaman-pada-OPAC#keterangan","content":"pada skrip diatas terdapat $plugins-&gt;registerMenu('opac', 'member', __DIR__ . '/member.inc.php');  berikut penjelasannya: opac : Merupakan lokasi dimana plugin tersebut akan muncul yaitu OPAC.member : Merupakan nama path yang akan diakses via ?p=&lt;path&gt; misal ?p=member.__DIR__ . '/member.inc.php' : Merupakan lokasi file hasil modifikasi yang kita buat "},{"title":"Code Name","type":0,"sectionRef":"#","url":"/docs/user-guide/Introduction/Code Name","content":"Code Name As an appreciation to the indigenous floras of Indonesia, we begin to place a code name, since Senayan 3 Stable 14 release, to SLiMS releases, so our users can learn about the diversity of floras in Indonesia. As in this release, we named it after a Bulian tree. SLiMS 9 Bulian. Bulian is native to Brunei; Flores, Java, Kalimantan and Sumatra in Indonesia; the Sabah and Sarawak states of Malaysia; and the Sulu Archipelago of the Philippines. It is threatened by habitat loss. The government of Indonesia and the state government of Sarawak have formally banned the export of this species. Illegal smuggling continues to be a major problem. The species is threatened by over-exploitation, predominantly by illegal migrant loggers. Current demand for the timber is fueled for its esteem among Chinese as a coffin wood (as it is resistant to insect and rot). Included in list of vanishing timber species of the Philippines and considered almost extinct in Sabah. In Java and Sumatra it exists solely in National Parks. Currently the situation is assessed as a serious depletion of stands. The species is only planted on a small scale because the supply of seeds and seedlings is inadequate. The IPB Bogor Agricultural Institute (Institut Pertanian Bogor) is currently breeding a generation of plants more hardy than the wild harvested seeds. Many Dayak believe that the ulin wood acts as a protective talisman to avoid attack from tigers and elephants. The Dayak believe that this use of the ulin talisman and the stands of ulin trees was and is the sole cause of a lack of Sumatran elephants or Sumatran tigers in Kalimantan and Sarawak. The potent 'elephant and tiger repellent' is alleged to be the sap of the tree, which has a strong, pleasant lemon-like odour.","keywords":""},{"title":"How-to","type":0,"sectionRef":"#","url":"/docs/user-guide/Installation/How-to","content":"","keywords":""},{"title":"Source Code​","type":1,"pageTitle":"How-to","url":"/docs/user-guide/Installation/How-to#source-code","content":"In order for SLiMS to be installed, ensure that the web server (web server, for example Apache web server), MySQL (database application), and PHP (programming language) is installed on the server hardware and running properly. It would be more helpful if the phpMyAdmin or Adminer application was also installed to assist in database setup via the web interface. If SLiMS is used on the internet (public), it is recommended to increase security by adding a firewall on the TCP / IP side (layer 3 and 4 of the OSI layer), on the application side (for example modsecurity) and on the database side (for example greensql). After the system to be used is ready, place the SLiMS source code in the web root directory that you are using. "},{"title":"Source Code with GnU/Linux​","type":1,"pageTitle":"How-to","url":"/docs/user-guide/Installation/How-to#source-code-with-gnulinux","content":"For users of the Gnu / Linux operating system, for example GnU / Linux Ubuntu (or Debian), the web root directory can be found in the /var/www/html directory. For users of GnU / Linux Ubuntu version 12.04 and below, the web root directory is in the /var/www/ directory. First download the SLiMS source code which can be obtained via the SLiMS page or through the repository on the GitHub page. Then place it in the web root directory. Extracting Source Code​ The next step is to extract the compressed source code. Enter the command: $ sudo unzip slims9_bulian-master.zip After the extraction process is complete, a single SLiMS installation directory will be created in the web root directory (usually the directory name will be the same as the compressed file name). Start Installation​ After the extraction process is complete, we can start the SLiMS installation process using the SLiMS Installer. "},{"title":"Source Code with Microsoft Windows​","type":1,"pageTitle":"How-to","url":"/docs/user-guide/Installation/How-to#source-code-with-microsoft-windows","content":"For users of this operating system, the use of Apache, PHP, MySQL is available in packages. Many packages that can be used. One of the best known is XAMPP by Apache Friends. This application can be downloaded at http://apachefriends.org. After installing XAMPP, you can start the web server and database services by selecting the XAMPP control panel from the application menu.  If you are using XAMPP, then the web root directory is located in xampp/htdocs. To start installing SLiMS using source code, copy the SLiMS source code files, as written in the previous chapter, into that directory. After you finish copying the files, the next step is to decompress the source files. To decompress, you can use a 7zip application (or something similar like WinZip and WinRAR). After the extraction process is complete, we can start the SLiMS installation process using the SLiMS Installer. "},{"title":"The Installer​","type":1,"pageTitle":"How-to","url":"/docs/user-guide/Installation/How-to#the-installer","content":"Like previous versions of SLiMS Installer, in this version, you don't need to define databases manually. You only need to enter the name of the database that will be used, the name of the user who has access rights (usually root or define it yourself), and don't forget the password used to access the database.  Before going to the next step, let's discuss the appearance of the new installer on SLiMS 9 Bulian. This new installer, functionally, is not much different from the previous installer, but is presented with a more &quot;fresh&quot; appearance. Some of the installer's functionality is also made easier for novice users to understand. To start the SLiMS installation process, you can press the &quot;Get Started&quot; button. Then you will be taken to the System Requirements page.  This page will scan the system whether the computer you are using already has the required components. Components marked with the word optional are alternative components. In other words, if these components are not available / installed, the SLiMS installation can still be run. Another case with components that are not marked with optional words. The components that are not marked are components that MUST be installed. Without these components, the SLiMS installation cannot continue. If you use the XAMPP application as an AMP application (Apache, MySQL, PHP) installed on the system you are using, then these components are installed by default. In the &quot;Pre-Installation Step&quot; section, make sure the directories displayed in that section have changed their status to read-write. This case only occurs on Unix or GnU / Linux based operating systems. If you are using an MS-Windows operating system, you do not need to change directory permissions on these directories. Click on the &quot;Next&quot; button to continue the installation process.  Next, do you want to install a new one or upgrade the version of SLiMS you are using? Please click on the button you want. The &quot;Install SLiMS&quot; button means that you will install SLiMS 9 Bulian on the device you are using. The button &quot;Upgrade my SLiMS&quot; means you are an SLiMS user who will upgrade your SLiMS version to SLiMS 9 Bulian.  When you click on the &quot;Install SLiMS&quot; button, you will be taken to the first step (of two) of the installation process. Information: Database Host. By default, the entries in this field do not need to be changed. As the information listed beside the segment.Database Port. Port that is assign to respond to database access. For MySQL, default port number is 3306.Database Name. Enter the name of the database to be created, which SLiMS will then use.Database Username. Is an account that is used to access the database. By default, the account provided by MySQL / MariaDB is root. The root account status is the highest account that has full access and rights to all databases. Be careful when using this root account. Tip​ In a production machine, create a separate account for each database created, instead of using only the root account, which is granted rights or access only to certain databases. This is done for security. Database Password. Enter the password used for the account used in the Database Username field. After you have completed all the credentials, click on the &quot;Test Connection&quot; button to confirm that the credentials are correct. If so, then you will see a button like the following image:  Continue to click on the button to continue the installation process to the second step.  explanation: Generate Sample Data. Reluctant to add sample data to your SLiMS? Please select the &quot;No, don't do that!&quot;Username. Pay attention to the line &quot;Super User Profiles&quot;. The username information that you will create, is the user who has access to the entire system. Can be changed as you wish.Password. In previous installers, this field was not required. The installer will provide the default password &quot;admin&quot; if the field is left blank. In new installers, the password MUST be entered. Cannot be left empty.Retype Password. Retype keywords entered in the previous field, here. After filling in the fields, click on the &quot;Run the Installation&quot; button to continue the installation. If there are no problems, the following page will appear:  With the appearance of a page like the one above, the installation process is complete and you can use the installed SLiMS by clicking on the &quot;Go to My SLiMS&quot; button. Note​ Look for the line that says &quot;Folder install in your SLiMS is already exist. For security reason please rename or remove it from your machine&quot;. The information on this line serves as a reminder that after the installation is complete, don't forget to delete / change (name) the install directory that is in the SLiMS source code directory. As shown in the following image.  After clicking on the &quot;Go to My SLiMS&quot; button, you will be taken to the SLiMS 9 Bulian OPAC page.  "},{"title":"Portable SLiMS​","type":1,"pageTitle":"How-to","url":"/docs/user-guide/Installation/How-to#portable-slims","content":"Portable SLiMS (for Windows) or PSLiMS is a software package consisting of SLiMS applications, Apache Web Server, PHP Scripting engine, MySQL or MariaDB Database Server and Adminer Database Management. PSLiMS is formulated to facilitate the use of SLiMS. Copy, extract and run! Note​ In version one of the PSLiMS along with the release of SLiMS 9 Bulian, the YAZ and MARC libraries, which are required to use the Z3950 catalog copy and export features of MARC data, are not installed. Installation of these libraries will be carried out for the next PSLiMS version. Update​ In the last PSLiMS release, how to activate the YAZ and MARC features can be read in the SLiMS Tips and Tricks documentation via the https://tinyurl.com/w7jv8bz link. After downloading the PSLiMS file, copy it into a root directory such as directory C:, directory D:, and so on. Then, extract the file.  The results of extracting the PSLiMS file are as exemplified in the image above, with the directory name &quot;x86&quot; for PSLiMS which is used in the 32bit MS-Windows operating system. Meanwhile, the directory name &quot;amd64&quot; is to be used in the MS-Windows 64bit architecture operating system.  In that directory, to start using SLiMS, click on the file names &quot;httpd.bat&quot; and &quot;mariadb.bat&quot;. The &quot;httpd.bat&quot; file is used to start the Apache web server.  If you see a pop-up like the following image, click on the &quot;Allow Access&quot; button so that the application is saved in the operating system firewall configuration  Next, click on the &quot;mariadb.bat&quot; file to start the MariaDB database server.  If you see a pop-up like the following image, click on the &quot;Allow Access&quot; button so that the application is saved in the operating system firewall configuration.  If the two files run without displaying an error message, you can use SLiMS by opening a browser and entering the address localhost:8089 into the browser's address bar.  The OPAC display of the SLiMS application will appear. Now SLiMS can be used. If you want to kill Apache and MariaDB processes, enter the CTRL + C key combination on the keyboard in each Apache and MariaDB window and then type &quot;Y&quot; for &quot;Yes&quot;. PSLiMS from recent update, uses Adminer and phpMyAdmin as database management application. Enter the address localhost: 8089/adminer.php and or localhost:8089/phpmyadmin, to access the application. For login you can use the based-on-app access username: slimsuser and password: passwordslimsuser to enter the dashboard. You can start managing the required databases.  Adminer login view.  phpMyAdmin login view. "},{"title":"Schema","type":0,"sectionRef":"#","url":"/docs/development-guide/Database/Schema","content":"","keywords":"database slins konfigurasi database di SLiMS"},{"title":"Penggunaan​","type":1,"pageTitle":"Schema","url":"/docs/development-guide/Database/Schema#penggunaan","content":""},{"title":"Membuat tabel​","type":1,"pageTitle":"Schema","url":"/docs/development-guide/Database/Schema#membuat-tabel","content":"&lt;?php use SLiMS\\Table\\Schema; use SLiMS\\Table\\Blueprint; function up() { // Membuat tabel Schema::create('read_counter', function(Blueprint $table){ // Format : {object_blueprint} -&gt; {tipe_kolom} -&gt; {isi bawaan} // storage engine $table-&gt;engine = 'MyISAM'; // character set $table-&gt;charset = 'utf8mb4'; // Collate $table-&gt;collation = 'utf8mb4_unicode_ci'; // membuat kolom beranam id dengan fungsi ikrement $table-&gt;autoIncrement('id'); // membuat kolom bernama item_code tipe varchar dengan // lebar data 20 dan tidak nulll $table-&gt;string('item_code', 20)-&gt;notNull(); $table-&gt;string('title', 255)-&gt;notNull(); // Membuat kolom dengan tipe datetime bernama created_at $table-&gt;datetime('created_at')-&gt;notNull(); // pentunjuk selengkapnya ada di lib/Table/Blueprint.php }); }  "},{"title":"Menghapus tabel​","type":1,"pageTitle":"Schema","url":"/docs/development-guide/Database/Schema#menghapus-tabel","content":"&lt;?php use SLiMS\\Table\\Schema; use SLiMS\\Table\\Blueprint; function down() { // Membuat tabel Schema::drop('read_counter'); }  "},{"title":"Mengosongkan tabel​","type":1,"pageTitle":"Schema","url":"/docs/development-guide/Database/Schema#mengosongkan-tabel","content":"&lt;?php use SLiMS\\Table\\Schema; use SLiMS\\Table\\Blueprint; function down() { // Membuat tabel Schema::truncate('read_counter'); }  "},{"title":"Mengubah kolom pada tabel​","type":1,"pageTitle":"Schema","url":"/docs/development-guide/Database/Schema#mengubah-kolom-pada-tabel","content":"&lt;?php use SLiMS\\Table\\Schema; use SLiMS\\Table\\Blueprint; function down() { // Membuat tabel Schema::table('read_counter', function(Blueprint $table){ // Format : {object_blueprint} -&gt; {tipe_kolom} -&gt; {isi bawaan} -&gt; {pernyataan (drop,change, add)} // Merubah lebar data $table-&gt;string('item_code', 50)-&gt;notNull()-&gt;change(); // Menghapus kolom $table-&gt;drop('kolom_test'); // Menambah kolom baru $table-&gt;string('gmd', 5)-&gt;nullable()-&gt;after('title')-&gt;add(); }); }  "},{"title":"Mendapatkan meta data dari subah Tabel dan Kolom​","type":1,"pageTitle":"Schema","url":"/docs/development-guide/Database/Schema#mendapatkan-meta-data-dari-subah-tabel-dan-kolom","content":"&lt;?php use SLiMS\\Table\\Schema; use SLiMS\\Table\\Blueprint; function up() { // Ketersediaan Schema::table('biblio')-&gt;isExists(); // mengecek ketersediaan tabel Schema::table('biblio')-&gt;isEmpty(); Schema::table('biblio')-&gt;column('title')-&gt;isExists(); // mengecek ketersediaan kolom title pada tabel biblio // Tipe data Schema::table('biblio')-&gt;column('title')-&gt;isNull(); // cek apakah isi bawaan mua itu null? Schema::table('biblio')-&gt;column('title')-&gt;isPrimary(); // apakah kolom tersebut adalah primary? Schema::table('biblio')-&gt;column('title')-&gt;isUnique(); // apakah kolom title memiliki key unique? Schema::table('biblio')-&gt;column('title')-&gt;isFullText(); // apakah kolom teks menggunakan key full text Schema::table('biblio')-&gt;column('title')-&gt;isAutoincrement(); // apakah nilai kolom title bertambah setiap ada databaru? // mengambil informasi tabel Schema::table('biblio')-&gt;getEngine(); // mendapat kan storage engine . Contoh : MyISAM,Aria,InnoDB Schema::table('biblio')-&gt;getRowCount(); // medapatkan jumlah baris pada tabel Schema::table('biblio')-&gt;getCollation(); // mendapatkan kolasi dari tabel Schema::table('biblio')-&gt;getAutoincrement(); // mendapatkan nilai terakhir dari AutoIncrement Schema::table('biblio')-&gt;getComment()); // mendapatkan komentar pada tabel // mengambil informasi kolom Schema::table('biblio')-&gt;column('title')-&gt;getType(); // mendapatkan tipe data. Contoh : varchar dll Schema::table('biblio')-&gt;column('title')-&gt;getPosition(); // mendapatkan posisi lokasi kolom pada tabel tersebut Schema::table('biblio')-&gt;column('title')-&gt;getCollation(); // medapatkan kolasinya Schema::table('biblio')-&gt;column('title')-&gt;getAutoincrement(); // mendapatkan status apakah dia auto increment atau tidak Schema::table('biblio')-&gt;column('title')-&gt;getComment(); // mendapatkan komentar Schema::table('biblio')-&gt;column('title')-&gt;getMaxLength(); // mendapatkan panjang maksimal dari kolom tersebut. Schema::table('biblio')-&gt;column('title')-&gt;getKey(); // mendapatkan key, seperti PrimaryKey, Unique, Index, Mul }  "},{"title":"Penggunaan Database","type":0,"sectionRef":"#","url":"/docs/development-guide/Database/Penggunaan","content":"","keywords":"database slins konfigurasi database di SLiMS"},{"title":"Perbedaan penggunaan MySQLi dan PDO​","type":1,"pageTitle":"Penggunaan Database","url":"/docs/development-guide/Database/Penggunaan#perbedaan-penggunaan-mysqli-dan-pdo","content":"Global scope​ Ketika anda menggunakan MySQLi atau $dbs didalam sebuah function() maka anda tidak bisa menulis seperti ini function ambilData() { $query = $dbs-&gt;query('select * from biblio'); // skrip selanjutnya }  ketika anda menulis seperti skrip diatas maka PHP akan menampilkan error mengenai variabel $dbs tidak tersedia. Solusinya yaitu: function ambilData($dbs) { $query = $dbs-&gt;query('select * from biblio'); // skrip selanjutnya } // atau function ambilData() { global $dbs; $query = $dbs-&gt;query('select * from biblio'); // skrip selanjutnya }  Namun apabila anda menggunakan PDO atau DB::class maka anda tidak perlu menggunakan global scope apabia ingin memanggil nya dalam function. Contoh nya sebagai berikut: function ambilData() { $query = \\SLiMS\\DB::getInstance()-&gt;query('select * from biblio'); // skrip selanjutnya }  atau bisa seperti ini: &lt;?php use \\SLiMS\\DB; // unuk skrip harus dibawah &lt;?php function ambilData() { $query = DB::getInstance()-&gt;query('select * from biblio'); // skrip selanjutnya }  Simpulan​ Jadi kesimpulannya adalah ada dicara pemanggilannya. Jika anda menggunakan MySQLi anda harus memanfaatkan variabel $dbs, tetapi di PDO anda tidak perlu untuk menggunakan variabel untuk menggunakannya. "},{"title":"Menggunakan MySQLi via DB::class​","type":1,"pageTitle":"Penggunaan Database","url":"/docs/development-guide/Database/Penggunaan#menggunakan-mysqli-via-dbclass","content":"Jika anda ingin menggunakan MySQLi namun tidak bergantung pada variabel $dbs maka anda dapat memanggil seperti berikut: $query = \\SLiMS\\DB::getInstance('mysqli')-&gt;query('select * from biblio');  atau use \\SLiMS\\DB; $query = DB::getInstance('mysqli')-&gt;query('select * from biblio');  walaupun menggunakan DB::class anda tetap bisa menggunakan API dari MySQLi seperti fetch_assoc dll seperti berikut: $result = []; while($data = $query-&gt;fetch_assoc()) { $result[] = $data; }  "},{"title":"Menganti koneksi​","type":1,"pageTitle":"Penggunaan Database","url":"/docs/development-guide/Database/Penggunaan#menganti-koneksi","content":"Jika anda menggunakan \\SLiMS\\DB untuk mengambil data dari database maka anda dapat menggunakan lebih dari satu koneksi database. Secara bawaan pustaka tersebut menggunakan profil nodes SLiMS untuk mengganti sebagai berikut: Sementara​ $db1 = DB::getInstance(); // akan menggunakan profil koneksi SLiMS $db2 = DB::connection('non-default'); // akan menggunakan profil koneksi non-default (nama bisa anda sesuaikan)  untuk menambahkan koneksi yang lain dapat membaca pada referensi sebelumnya note Sebelum anda menggunakan MySQLi via $dbs atau DB::class dan PDO pastikan pada file yang sedang anda gunakan sudah menempatkan require '&lt;slims-root-path&gt;/sysconfig.inc.php' pada posisi paling atas setelah skrip use SLiMS\\DB; dll; "},{"title":"Membuat plugin \"Hello World\"","type":0,"sectionRef":"#","url":"/docs/development-guide/Plugin/Membuat-plugin-sederhana","content":"Membuat plugin &quot;Hello World&quot; Kita mulai dengan hal yang mudah terlebih dahulu. Berikut langkahnya Buatlah sebuah file bernama hello_world.plugin.php pada folder plugins/ yang ada di folder utama SLiMS anda.Isi file tersebut dengan persyaratan minimal yang ada pada Laman ini Jika sudah maka kita akan coba untuk menggunakan operasi Hook pada halaman OPAC, seperti berikut: $plugins-&gt;register(Plugins::CONTENT_BEFORE_LOAD, function(){ exit('&lt;h1&gt;Hello World&lt;/h1&gt;') }); Berikut contohny lenghkap nya &lt;?php /** * Plugin Name: Hello World * Plugin URI: - * Description: Belajar membuat plugin sederhana * Version: 1.0.0 * Author: Foo * Author URI: https://foo.who */ use SLiMS\\Plugins; $plugins = Plugins::getInstance(); $plugins-&gt;register(Plugins::CONTENT_BEFORE_LOAD, function(){ exit('&lt;h1&gt;Hello World&lt;/h1&gt;') }); Setelah itu aktifkan plugin itu pada modul System &gt; Plugin. Lalu buka halaman OPAC anda, dan lihat apa yang terjadi 😁. Bagaimana? sudah melihat hasilnya? nah dengan ini anda sudah membuat sebuah plugin sederhana.","keywords":"plugins slims slims plugin dokumentasi plugin SLiMS"},{"title":"Contributors","type":0,"sectionRef":"#","url":"/docs/user-guide/Introduction/Contributors","content":"","keywords":""},{"title":"Senayan Developer Community​","type":1,"pageTitle":"Contributors","url":"/docs/user-guide/Introduction/Contributors#senayan-developer-community","content":"We are: Hendro Wicaksono (hendrowicaksono@gmail.com)Arie Nugraha (dicarve@gmail.com)Wardiyono (wynerst@gmail.com)Purwoko (tamanjiwa@gmail.com)Arif Syamsudin (aarif.syamsudin@gmail.com)Rasyid Ridho (rasyidridho@gmail.com)Eddy Subratha (mucill@gmail.com)Indra Sutriadi (indra.sutriadi@gmail.com)Waris Agung Widodo (ido.alit@gmail.com)Heru Subekti (heroe.soebekti@gmail.com) Our fallen comrades: Sulfan Zayd (sulfan@gmail.com, sulfan.zayd@gmail.com)Widianto Nugroho (wnugroho@gmail.com) "},{"title":"Language Contributors​","type":1,"pageTitle":"Contributors","url":"/docs/user-guide/Introduction/Contributors#language-contributors","content":"Most of the contributors are native speaker. They are: Germany: Tobias Zeumer (tzeumer@verweisungsform.de)Thai: Prasitichai เรารักในหลวง (eak.pras@facebook.com)Bengali: A. K. M. Nurul Alam (nalamapu@gmail.com)Persian: Mohammad Javad Mansourzadeh (info@mansourzadeh.ir)Arabic: Rasyid Ridho (rasyidridho@gmail.com), Bounama Kouider (for full Arabic support)Brazilian Portuguese: Eduardo Koiti Kataoka (edukataoka@yahoo.com.br)Spain: Jhon Urrego Felipe Mejia (ingenierofelipeurrego@gmail.com)Urdu (Pakistan): Faheem Akbar (onlinevws@gmail.com), Aijaz Akhter Ahmadani (ritelibrarian@gmail.com)Turkish: Ali Yasir Yılmaz (aliyasiryilmaz@gmail.com)Malay: Jerry Mohd. ArifRussian: Russian: Igor Gaydyshev (https://sourceforge.net/projects/russiantranslationforsenayan/) "},{"title":"Code Contributors:​","type":1,"pageTitle":"Contributors","url":"/docs/user-guide/Introduction/Contributors#code-contributors","content":"Drajat Hasan (drajathasan20@gmail.com)John Antony (john.antony@iamplus.com)Gettext support: Tobias ZeumerMembercard modification: Jushadi Arman Saz (jushadi@unsulbar.ac.id)English documentation: Jim Richardson "},{"title":"Disclaimer","type":0,"sectionRef":"#","url":"/docs/user-guide/Introduction/Disclaimer","content":"Disclaimer Disclaimer: This documentation comes without guarantee. You can copied and redistributed in any form. You are also free to use this documentation for commercial use. The documentation was licensed under Attribution-ShareAlike 4.0. International (CC BY SA 4.0). This English documentation was built based on the English version documentation, SLiMS 7 Cendana based, translated by Jim Richardson. And some additional chapter were translated using Google Translate.","keywords":""},{"title":"Membuat Plugin Modifikasi Pada Area Admin","type":0,"sectionRef":"#","url":"/docs/development-guide/Plugin/Membuat-plugin-modifikasi-pada-area-admin","content":"","keywords":"Plugin Admin SLiMS Plugin Admin"},{"title":"Pengantar​","type":1,"pageTitle":"Membuat Plugin Modifikasi Pada Area Admin","url":"/docs/development-guide/Plugin/Membuat-plugin-modifikasi-pada-area-admin#pengantar","content":"Pada materi sebelumnya sudah dibahas mengenai langkah-langkah memodifikasi halaman yang ada di OPAC. Pada bagian ini kita akan belajar untuk membuat/memodifikasi halaman yang ada di area admin. Langkah yang akan digunakan tak berbeda jauh, seperti yang ada dibawah ini: "},{"title":"Memanfaatkan operasi hook​","type":1,"pageTitle":"Membuat Plugin Modifikasi Pada Area Admin","url":"/docs/development-guide/Plugin/Membuat-plugin-modifikasi-pada-area-admin#memanfaatkan-operasi-hook","content":"Pada materi hook dijelaskan bagaimana kita melakukan manipulasi proses yang akan/belum terjadi di SLiMS, misalnya kita akan menginterupsi proses penyimpanan data sebelum data itu tersimpan. Lalu apa kegunaannya? kita dapat memberikan fitur-fitur yang kita inginkan dalam proses penyimpanan data, misalnya membuat percabangan penyimpnan dimana kita ingin sebelum data itu disimpan kita akan mengambil beberapa data yang ada lalu menyimpannya ditempat lain. Studi kasusnya yaitu menyimpan data yang ada di SLiMS ke database lain, seperti ElasticSearch, MeiliSearch dll yang akan digunakan sebagai basis data untuk pencarian. Kita akan buat contoh sederhana seperti berikut: Buat folder di plugins/ dengan nama hooking.Pada folder yang dibuat pada langkah pertama, buat sebuah file dengan nama hooking.plugin.php.Isi dari file yang dibuat pada langkah ketika seperti skrip dibawah ini &lt;?php /** * Plugin Name: Hooking * Plugin URI: - * Description: Memanipulasi proses data di SLiMS * Version: 1.0.0 * Author: Foo * Author URI: https://foo.who */ use SLiMS\\Plugins; $plugins = Plugins::getInstance(); $plugins-&gt;register('bibliography_before_save', function($data){ toastr('Test hooking')-&gt;native(); });  Setelah itu aktifkan plugin itu pada modul System &gt; Plugin dengan nama hooking. Jika sudah anda buka menu tambah bibliografi baru modul bibliography dan buat sebuah data baru (anda bisa isi sembarang data misal saja dengan judul test).Apabila plugin berjalan dengan baik maka akan muncul seperti berikut (setelah anda menekan tombol simpan) Penjelasan​ lihat komentar pada skrip dibawah berikut: $plugins-&gt;register('bibliography_before_save', function($data){ // disini anda dapat melakukan berbagai macam proses manipulasi data // bahkan sampai menginterupsi pun anda bisa. Lakukan apa yang // anda butuhkan di bagian ini. toastr('Test hooking')-&gt;native(); // ini sebagai contoh saja bisa diganti kok. });  Masih banyak lagi contoh penggunaan hook, anda dapat mengganti proses hook bibliography_before_save dengan proses yang lain. "},{"title":"Menambah menu kustom pada submenu​","type":1,"pageTitle":"Membuat Plugin Modifikasi Pada Area Admin","url":"/docs/development-guide/Plugin/Membuat-plugin-modifikasi-pada-area-admin#menambah-menu-kustom-pada-submenu","content":"Pada materi sebelumnya mengenai modifikasi menu. Kali ini kita akan mempraktikan terkait menambahkan kustom menu kedalam submenu pada modul bibliography tanpa merubah isi dari file submenu.php yang ada di dalam modul tersebut. Berikut langkahnya: Buat folder di plugins/ dengan nama custom_menu.Pada folder yang dibuat pada langkah pertama, buat sebuah file dengan nama custom_menu.plugin.php.Isi dari file yang dibuat pada langkah ketika seperti skrip dibawah ini &lt;?php /** * Plugin Name: Custom Menu * Plugin URI: - * Description: Menambah kustom menu * Version: 1.0.0 * Author: Foo * Author URI: https://foo.who */ use SLiMS\\Plugins; $plugins = Plugins::getInstance(); $plugins-&gt;registerMenu('bibliography', 'Kustom Menu', __DIR__ . '/custom_menu.php');  Buat sebuah file dengan nama custom_menu.php didirektori yang sama dengan custom_menu.plugin.phpIsi file pada langkah ke 4 dengan skrip dibawha ini: &lt;?php echo &quot;&lt;h1&gt;Hai ini isi dari custom_menu.php&lt;/h1&gt;&quot;;  Setelah itu aktifkan plugin itu pada modul System &gt; Plugin dengan nama Custom Menu. Maka akan muncul menu baru diujung paling bawah seperti berikut: Jika diklik maka muncul seperti gambar dibawah berikut:  "},{"title":"Merubah isi menu yang sudah ada pada submenu​","type":1,"pageTitle":"Membuat Plugin Modifikasi Pada Area Admin","url":"/docs/development-guide/Plugin/Membuat-plugin-modifikasi-pada-area-admin#merubah-isi-menu-yang-sudah-ada-pada-submenu","content":"Pada materi diatas dijelaskan bahwa kita dapat menambah menu kustom pada submenu. Tak jauh berbeda dengan materi diatas, kali kita akan memanipulasi isi dari sebuah menu yang sudah ada. Langkah yaitu melanjutkan dari langkah sebelumnya: Pada folder plugins/custom_menu buat sebuah file bernama custom_index.phpBuka file submenu.php pada folder admin/modules/bibliography/submenu.php, salin skrip yang ada didalam kotak merah seperti dibawah berikut:Buka file custom_menu.plugin.php pada folder plugins/custom_menu lalu tambah skrip dibawah berikut: $plugins-&gt;registerMenu('bibliography', __('Bibliographic List'), __DIR__ . '/custom_index.php');  Maka skrip lengkapnya sebagai berikut: &lt;?php /** * Plugin Name: Custom Menu * Plugin URI: - * Description: Menambah kustom menu * Version: 1.0.0 * Author: Foo * Author URI: https://foo.who */ use SLiMS\\Plugins; $plugins = Plugins::getInstance(); $plugins-&gt;registerMenu('bibliography', 'Kustom Menu', __DIR__ . '/custom_menu.php'); $plugins-&gt;registerMenu('bibliography', __('Bibliographic List'), __DIR__ . '/custom_index.php');  Isi file yang sudah dibuat pada langkah ke 1 dengan skrip berikut: &lt;?php echo &quot;&lt;h1&gt;Hai ini isi dari custom_index.php&lt;/h1&gt; &lt;p&gt;yang menggantikan isi dari admin/modules/bibliography/index.php&lt;/p&gt;&quot;;  Refresh halaman saat ini masuk ke modul biblography. Jika langkah 5 berhasil maka muncul sebagai berikut: Penjelasan​ $plugins-&gt;registerMenu('bibliography', __('Bibliographic List'), __DIR__ . '/custom_index.php');  bibliography : adalah nama modul yang dituju, anda dapat menganti modul tersebut dengan modul yang tersedia seperti bibliography, membership, master_file, circulation, stock_take, system, reporting, dan serial_control setiap pendaftaran menu akan muncul disetiap modul yang disebutkan. Namun, apabila modul yang disebutkan tidak tersedia/aktif di SLiMS maka menu tidak akan pernah muncul.__('Bibliographic List') : Adalah nama menu yang tersedia di modul Bibliography. Kenapa harus diawali dengan __( dan akhiri ) karena metoda tersebut digunakan untuk menterjemahkan setiap kata yang diletekan dikeduanya. Jadi plugin anda dapat dibaca diberbagai macam bahasa.__DIR__ . '/custom_index.php' : Nama file yang akan digunakan untuk menggantikan file sebenarnya pada modul bibliography. "},{"title":"Release Features","type":0,"sectionRef":"#","url":"/docs/user-guide/Introduction/Release Features","content":"","keywords":""},{"title":"Features (Release tag 9.4.1)​","type":1,"pageTitle":"Release Features","url":"/docs/user-guide/Introduction/Release Features#features-release-tag-941","content":"For the 9.4.1 release, SLiMS bring changes to: Fixed : Hidden ajax listFixed : Hidden menu header for user not administratorUpdate : Sub-menus view for dark mode admin templateAdded : User other than (super) admin unable to change usernameFixed : Error when user try to save profile change "},{"title":"Pengantar","type":0,"sectionRef":"#","url":"/docs/development-guide/Plugin/Intro","content":"","keywords":"plugins slims slims plugin dokumentasi plugin SLiMS"},{"title":"Permulaan​","type":1,"pageTitle":"Pengantar","url":"/docs/development-guide/Plugin/Intro#permulaan","content":"Sistem plugin merupakan inovasi yang dihadirkan sejak versi SLiMS Bulian 9.3.0 oleh Mas Ido Alit. Tujuan dari inovasi ini yaitu untuk mempermudah kerja dari pengembang SLiMS (dari sisi pengguna atau pihak yang membantu pengguna) dalam melakukan proses upgrade SLiMS dari versi sekarang ke versi yang lebih mutakhir. "},{"title":"Persiapan​","type":1,"pageTitle":"Pengantar","url":"/docs/development-guide/Plugin/Intro#persiapan","content":"Hal yang perlu disiapkan (minimal) untuk membuat sebuah plugi n seperti: Pengetahuan mengenai bahasa pemrograman HTML (termasuk CSS), PHP, JS, dan SQLPemahaman mengenai penggunaan library dan tool seperti composer (opsional) "},{"title":"Sistematika plugin​","type":1,"pageTitle":"Pengantar","url":"/docs/development-guide/Plugin/Intro#sistematika-plugin","content":"Semua plugin SLiMS secara default diletakan di folder plugins/, yang ditandai dengan ekstensi file .plugin.php. Seluruh plugin akan dipindai oleh SLiMS dengan kedalaman tingkat folder hingga 3 tinggkat. # Contoh tingkat kedalaman folder yang dipindai plugins/ # tingkat 0 --- biblio_adv_log.plugin.php # plugin tingkat 1 --- label_barcode/ # folder tingkat 1 ------ label.plugin.php # plugin tingkat 2 --- contoh_plugin/ # folder tingkat 1 ------ folder_didalam_contoh_plugin/ # folder tingkat 2 --------- plugin_didalam_contoh_plugin.plugin.php # plugin tingkat 3  dengan ini anda dapat membuat plugin dengan sistem hirarki. "},{"title":"Format isi plugin​","type":1,"pageTitle":"Pengantar","url":"/docs/development-guide/Plugin/Intro#format-isi-plugin","content":"format isi digunakan untuk menginformasikan SLiMS mengenai informasi terkait pembuat plugin, versi plugin, deskrpsi plugin, dll. &lt;?php /** * Plugin Name: &lt;nama plugin&gt; * Plugin URI: &lt;url untuk mengunduh plugin ini&gt; * Description: &lt;deskripsi plugin&gt; * Version: &lt;versi plugin dalam format Pemversian Semantic&gt; * Author: &lt;Nama Pembuat Plugin&gt; * Author URI: &lt;Alamat Media Sosial Pembuat Plugin&gt; */  Isi informasi yang ada dengan menganti contoh isi yang ada, contoh: &lt;nama_plugin&gt; menjadi nama anda. Setelah itu, kita perlu mencantumpkan kelas pustaka SLiMS yaitu SLiMS\\Plugins seperti berikut setalah informasi plugin sebelumnya: use SLiMS\\Plugins;  lalu membuat variable plugin: $plugins = Plugins::getInstance();  Maka format isi plugin selengkapnya seperti ini: &lt;?php /** * Plugin Name: &lt;nama plugin&gt; * Plugin URI: &lt;url untuk mengunduh plugin ini&gt; * Description: &lt;deskripsi plugin&gt; * Version: &lt;versi plugin dalam format Pemversian Semantic&gt; * Author: &lt;Nama Pembuat Plugin&gt; * Author URI: &lt;Alamat Media Sosial Pembuat Plugin&gt; */ use SLiMS\\Plugins; $plugins = Plugins::getInstance();  "},{"title":"Tipe operasi plugin​","type":1,"pageTitle":"Pengantar","url":"/docs/development-guide/Plugin/Intro#tipe-operasi-plugin","content":"Setelah anda paham mengenai format isi plugin, maka anda harus mencantumkan operasi apa yang akan dilakukan oleh plugin tersebut. Sistem plugin SLiMS berjalan dalam beberapa tipe, seperti hook, path, dan menu. Hook​ merupakan metoda yang digunakan oleh SLiMS untuk mengoperasikan beberapa perintah untuk melakukan modifikasi atau menambah atau menginterupsi operasi yang sudah/akan berjalan sesuai nama hook yang tersedia. Berikut daftar operasi hook yang tersedia di SLiMS: const ADMIN_SESSION_AFTER_START = 'admin_session_after_start'; const CONTENT_BEFORE_LOAD = 'before_content_load'; const CONTENT_AFTER_LOAD = 'after_content_load'; const BIBLIOGRAPHY_INIT = 'bibliography_init'; const BIBLIOGRAPHY_BEFORE_UPDATE = 'bibliography_before_update'; const BIBLIOGRAPHY_AFTER_UPDATE = 'bibliography_after_update'; const BIBLIOGRAPHY_BEFORE_SAVE = 'bibliography_before_save'; const BIBLIOGRAPHY_AFTER_SAVE = 'bibliography_after_save'; const BIBLIOGRAPHY_BEFORE_DELETE = 'bibliography_before_delete'; const BIBLIOGRAPHY_AFTER_DELETE = 'bibliography_after_delete'; const BIBLIOGRAPHY_CUSTOM_FIELD_DATA = 'advance_custom_field_data'; const BIBLIOGRAPHY_CUSTOM_FIELD_FORM = 'advance_custom_field_form'; const BIBLIOGRAPHY_BEFORE_DATAGRID_OUTPUT = 'bibliography_before_datagrid_output'; const CIRCULATION_AFTER_SUCCESSFUL_TRANSACTION = 'circulation_after_successful_transaction'; const MEMBERSHIP_INIT = 'membership_init'; const MEMBERSHIP_BEFORE_UPDATE = 'membership_before_update'; const MEMBERSHIP_AFTER_UPDATE = 'membership_after_update'; const MEMBERSHIP_BEFORE_SAVE = 'membership_before_save'; const MEMBERSHIP_AFTER_SAVE = 'membership_after_save'; const OVERDUE_NOTICE_INIT = 'overduenotice_init'; const DUEDATE_NOTICE_INIT = 'duedate_init'; const MODULE_MAIN_MENU_INIT = 'module_main_menu_init'; const OAI2_INIT = 'oai2_init';  Daftar diatas merupakan operasi hook yang terdaftar secara default di sistem plugin SLiMS. Namun ada beberapa yang tidak terdaftar namun tetap dapat bekerja dengan baik, berikut penjelasannya: ADMIN_SESSION_AFTER_START : hook akan bekerja ketika sesi login admin dimulaui.CONTENT_BEFORE_LOAD : hook ini berjalan di OPAC, dimana prosesnya akan bekerja sebelum konten OPAC dimuat.CONTENT_AFTER_LOAD : ini kebalikan dari hook kedua, yaitu setelah konten pada OPAC dimuat.BIBLIOGRAPHY_INIT : hook ini berada pada halaman utama pada modul bibliografi.BIBLIOGRAPHY_BEFORE_UPDATE : hook ini beroperasi sebelum proses pembaharuan data bibliografi dimulai.BIBLIOGRAPHY_BEFORE_SAVE : hook ini beroperasi sebelum proses penyimpanan data bibliografi dimulai.BIBLIOGRAPHY_AFTER_UPDATE : hook ini beroperasi setelah proses pembaharuan data bibliografi dimulai.BIBLIOGRAPHY_AFTER_SAVE : hook ini beroperasi setelah proses penyimpanan data bibliografi dimulai.BIBLIOGRAPHY_CUSTOM_FIELD_DATA : hook ini merupakan operasi yang digunakan untuk mendaftarkan data ruas tambahan secara mahir.BIBLIOGRAPHY_CUSTOM_FIELD_FORM : hook ini merupakan operasi yang digunakan untuk mendaftarkan ruas tambahan secara mahir.MEMBERSHIP_INIT : tidak berbeda jauh dengan BIBLIOGRAPHY_INIT hanya saja ini berjalan di modul membershipMEMBERSHIP_BEFORE_UPDATE : hook ini mirip seperti BIBLIOGRAPHY_BEFORE_UPDATE. Namun hanya pada modul membership.MEMBERSHIP_BEFORE_SAVE : hook ini mirip seperti BIBLIOGRAPHY_BEFORE_SAVE. Namun hanya pada modul membership.MEMBERSHIP_AFTER_UPDATE : hook ini mirip seperti BIBLIOGRAPHY_AFTER_UPDATE. Namun hanya pada modul membership.MEMBERSHIP_AFTER_SAVE : hook ini mirip seperti BIBLIOGRAPHY_AFTER_SAVE. Namun hanya pada modul membership.OAI2_INIT : hook ini berjalan pada file oai2.php pada halaman utama, dapat digunakan untuk memodifikasi process pertukaran data melalui protokol oai-pmh Berikut ini cara penggunaan hook yang tersedia pada daftar diatas: &lt;?php # Contoh $plugins-&gt;register('&lt;nama_hook&gt;', function(){ // lakukan suatu hal didalam block fungsi ini }); // atau jika dipraktikan akan seperti ini $plugins-&gt;register(Plugins::MEMBERSHIP_INIT, function(){ // lakukan suatu hal didalam block fungsi ini }); // atau jika anda tidak nyaman dengan penulisan Class::konstanta bisa // juga seperti ini. // sesuaikan saja dengan daftar hook yang tersedia $plugins-&gt;register('membership_init', function(){ // lakukan suatu hal didalam block fungsi ini }); // atau bisa juga dengan gaya seperti ini Plugins::hook(Plugins::MEMBERSHIP_INIT, function(){ // lakukan suatu hal didalam block fungsi ini });  Path​ Operasi ini merupakan cara yang digunakan untuk memodifikas tampilan halaman OPAC yang sudah ada tanpa merubah source code asli SLiMS. Misal path halaman member jika dicontohkan dalam bentuk URL secara penuh http://localhost/slims/index.php?p=member. Tampilan dalam halaman itu dapat anda ganti dengan menggunakan metoda ini. Berikut cara nya: // atau jika dipraktikan akan seperti ini $plugins-&gt;registerMenu('opac', 'member', __DIR__ . '/member.inc.php'); // atau Plugins::menu('opac', 'member', __DIR__ . '/member.inc.php'); // atau Plugins::opac('member', __DIR__ . '/member.inc.php');  Penjelasan paramter pada fungsi registerMenu(): opac : ini menandakan bahwa anda mendaftarkan menu/path baru pada OPAC.member : nama path yang dipanggil melalui ?p= seperti yang ada dicontoh URL di atas.__DIR__ . '/member.inc.php' : merupakan lokasi file yang akan mengganti tampilan sebenarnya pada halaman ?p=member. Anda juga dapat mendaftarkan path lain nya yang tidak ada di SLiMS. Contoh sebagai berikut: // halaman custom, bebas pustaka $plugins-&gt;registerMenu('opac', 'bebas pustaka', __DIR__ . '/sayabebas.inc.php');  Pada paramter ke 2 setiap spasi akan dikonversi menjadi _ atau underscore. Contoh 'bebas pustaka' menjadi 'bebas_pustaka', maka ketika anda memanggil path itu dibrowser menjadi ✅ http://localhost/slims/index.php?p=bebas_pustaka bukan 🚫 http://localhost/slims/index.php?p=bebas pustaka. Menu​ Tak berbeda dengan sebelumnya, bagian ini merupakan penjelasan bagaimana menambah/merubah menu yang ada di setiap module saat login sebagai pustakawan. Ini mempermudah anda sebagai pengembang SLiMS dalam mendaftarkan menu pada modul tertentu tanpa harus merubah file submenu.php pada setiap module. Berikut cara nya: // atau jika dipraktikan akan seperti ini $plugins-&gt;registerMenu('membership', 'Bebas Pustaka', __DIR__ . '/sayabebas.inc.php'); // atau Plugins::menu('membership', 'Bebas Pustaka', __DIR__ . '/sayabebas.inc.php'); // atau Plugins::membership('Bebas Pustaka', __DIR__ . '/sayabebas.inc.php');  Penjelasan paramter pada fungsi registerMenu(): membership : ini menandakan bahwa anda mendaftarkan/merubah menu baru pada modul membership. Anda dapat mendaftarkan pada modul yang lain selama modul itu tersedia dan aktif.Bebas Pustaka : nama menu yang akan muncul di daftar menu pada modul yang dituliskan pada parameter ke 1.__DIR__ . '/sayabebas.inc.php' : merupakan lokasi file yang akan muncul ketika menu diklik. note Perbedaan fungsi registerMenu() pada operasi path dan operasi menu adalah penempatannya. Jika OPAC berada di halaman opac SLiMS, maka selain itu akan ditampilkan pada halaman admin jika memang modul nya tersedia. "},{"title":"Requirements","type":0,"sectionRef":"#","url":"/docs/user-guide/Introduction/Requirements","content":"","keywords":""},{"title":"Installed Software Requirements​","type":1,"pageTitle":"Requirements","url":"/docs/user-guide/Introduction/Requirements#installed-software-requirements","content":"To run SLiMS 9 Bulian, you have to install these least requirements within your machine. Apache 2.4Mysql 5.7 or MariaDB 10.3PHP 7.4phpMyAdmin and or Adminer for database management console (optional) Unless you are using XAMPP, use the XAMPP 7.4.x which you can download at https://www.apachefriends.org. Or if you choose to use the Portable SLiMS, you can download at https://slims.web.id/. "},{"title":"Browser Requirements​","type":1,"pageTitle":"Requirements","url":"/docs/user-guide/Introduction/Requirements#browser-requirements","content":"SLiMS 9 Bulian works best with these browsers. Mozilla Firefox (Use or update for latest version) Google Chrome or Chromium (Use or update for latest version) Opera (Use or update for latest version) Microsoft Edge (Use or update for latest version) "},{"title":"Hardware Requirements​","type":1,"pageTitle":"Requirements","url":"/docs/user-guide/Introduction/Requirements#hardware-requirements","content":"As for the hardware, you need to have machines with these least specification. 4GB of RAM500GB of HDDMinimum Intel Core 2 Duo processors or equivalent with 2 cores "},{"title":"Add New Bibliography","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Add New Bibliography","content":"Add New Bibliography This sub-menu is used to add a new bibliography. The metadata that we must enter are: Title. Collection title. Enter the title of the library material to be processed Author. Authorship. Enter the author's name here Statement of Responsibility. Statement of responsibility. In this field, enter the author's name without reversing it Edition. Edition statement. No need to be filled in if it is not included in the processed library material Specific Detail Info. Contains bibliographic-specific information, for example: the scale on the map. Not used in book processing Item (s) Code Batch Generator. In this field, we are required to select the template code pattern first. If you don't have an exemplary pattern, click on the &quot;Add New Pattern&quot; button to add an exemplary pattern. Adjust to the pattern you use. For example, if you use code B00001, then the pattern that must be created is: Prefix: B Suffix: make it empty Length serial number: 5 Once filled in, click on the &quot;Save&quot; button to save the created pattern. Close the pop-up, then select the &quot;- Choose pattern -&quot; field to select the pattern for the code that has been created. Then proceed by entering the number of processed copies in the &quot;Total Item (s)&quot; section. To fill in the listing details regarding the copy, click on the &quot;Options&quot; button. You will be faced with the details of the copy as when you enter the copy data in the standard way (a la SLiMS). General Material Designation (GMD). This section contains processed data from library materials. By default, book collections use GMD, text; Note Added Field Resource Description Access (RDA) in SLiMS 8 Akasia: Content TypeMedia TypeCarrier Type If your library has not used RDA as a detail for filling out library materials, these sections can be skipped. Frequency. The frequency of periodicals, this entry retrieves data from the Master File. If this field is filled, the bibliographic data will be detected as a serial publication and will appear in the Serial Control module ISBN / ISSN. ISBN or ISSN number Publisher. Publisher Name, taken from existing data in the Master File. If not, you can directly adding it by typing the name of the publisher and select the add new option. Publish Year. Publication Year Publication Place. Place of publication. Taken from existing data in the Master File. If not, you can directly adding it by typing the name of the publisher and select the add new option Collation. Collation / Physical Description. Contains information about the physical data of the book such as page number, thickness, whether there are attachments or not, and so on Series Title. Series title (if applicable). It is a large title in which there are small titles, such as The Story of the Prophets, with book titles under such as, The Story of the Prophet Adam, The Story of the Prophet Moses Classification. Classification number by subject (DDC, UDC or other) Call Number. Collection Call Numbers. Attached to the spine, is representative of the subject when placed on a shelf Subjects. Topic / subject. This data can also be retrieved from the Master File by first filling in the subject to be entered. By entering the subject first, one of the advantages is the classification number that can be assigned to each subject Language. Choice of language from processed library materials Abstract / Notes. Snippets / summaries of processed library materials Image. Image (usually cover) that shows the identity of the collection. At SLiMS 9 Bulian, inserting a book cover image is easier. Provided, the computer you are using as the SLiMS server has internet access. In this section, apart from inserting images conventionally (search via google - download - browse via file browser - upload), an automatic download of book cover images has been added, you can use search results via Google or by clicking on the &quot;Trying search in DuckduckGo&quot; button. When you click on the &quot;Trying this search DuckduckGo&quot; button, SLiMS will automatically find the cover image data based on the title that has been entered first. Then click on the book cover image that has been found, bringing up the option to &quot;View File&quot;. Click on the &quot;View File&quot; button, then we will be directed to the download address of the book cover image. As per the example, the book cover image download address is: https://www.nap.edu/cover/12992/450. Copy the address, then paste it in the &quot;Paste url address here&quot; field, then click on the &quot;Download&quot; button. Then SLiMS will download the cover image of the book, for you. Attachments. Can be filled with files related to the collection (for example, a scanned page of the table of contents for the collection) or multimedia files from the bibliographic data that is being processed. Files that can be uploaded are files with the extensions .pdf, .rtf, .txt, .odt, .odp, .ods, .doc, .xls, .ppt, .avi, .mpeg, .mp4, .mkv, .wmv, .jpg, .jpeg, .png, .gif, .ogg, .mp3, .wma, .csv. Uploaded files can be more than one file. These files can be managed with public access (viewable by anyone accessing the OPAC) or closed (organized by membership type). The following are the terms of access restrictions: File access restrictions in SLiMS are based on the type of membership. So this access restriction is integrated with the type of membership. Cannot restrict access on an individual basisThere are two types of access to files: &quot;Public&quot; and &quot;Private&quot; If &quot;Private&quot; is selected, then the file cannot be accessed by anyoneIf &quot;Public&quot; access is selected and it is not checked which membership types can access, then the file can be downloaded by everyoneIf you select &quot;Public&quot; access and check which membership types can access, files can be downloaded only by members who have logged in and are registered with that membership type. This can also be done by activating the &quot;Allow OPAC File Download&quot; option in the System&gt; System Configuration Module. There are two options, &quot;Allow&quot; and &quot;Forbid&quot;. When you select the &quot;Forbid&quot; option, automatically, every attached file that you upload, when opened in the OPAC, the option to download the attached file, is turned off or not available (indicated by the Download icon in the pdf viewer) Related Biblio Data. In this section, the librarian can add a related book title (usually based on the same subject) to add information to the collection being processed. To add a related collection, click on the &quot;Add Relation&quot; button. Hide in OPAC Show: Bibliographic data can be accessed via OPACHide: Bibliographic data cannot be accessed via OPAC Promote in Homepage. to set a bibliography, whether to appear on the front page or not. With current default OPAC theme, this function is not working Label. To provide specific information about the bibliography. labels can be defined in the Master File module. By default, SLiMS has three labels: New Title, Favorite Title, and Multimedia. Note The Promote to Homepage feature is related to the Show Promoted Titles at Homepage configuration on the System Configuration sub-menu. Whereas Labels must be defined in the Master File module. On the label, you can input the URL according to the bibliography whose information is available on the internet. After we fill in the data, click on the &quot;Save&quot; button. If successful, the system will display information that the bibliographic data has been successfully stored. The screen will not change, but a new field will appear, namely the Item (s) Data (Exemplar Data) field. It's located under the Item (s) Code Batch Generator section. The next task is to edit the field and enter the number of copies according to the collection received by clicking on the &quot;Add new Items&quot; button as shown above. Note Exemplary code is a unique code that represents each copy of the collection. If the number of copies of the collection is more than one, it can be added by clicking again on &quot;Add New Item&quot;. After clicking, a pop-up page will appear as shown below: The data addition sheet for this copy contains the following sections: Title. This field contains the title taken from the bibliographic data spreadsheetItem code. The copy code will be entered in this field. If the code that has been entered has been used, the system will inform you with a red text on the right side of the segmentCall Number. This section retrieves data from bibliographic data entryInventory Code. If there is, enter the inventory code from the processed copy dataLocation. This field refers to the Location sub-menu data entry in the Master File moduleShelf Location. Contains information on the location of the shelf, the place where the final processing result will be placedCollection Type. By default, SLiMS provides three options, &quot;Reference&quot;, &quot;Textbook&quot;, and &quot;Fiction&quot;. To change or add a collection type, change the Collection Type sub-menu in the Master File moduleItem Status. There are four options that can be used. By default, SLiMS will redirect the copy's status to &quot;Available&quot;. To change or change the status of the copy, change it on the Item Status sub-menu in the Master File moduleOrder Number. This field corresponds to the ordering data. If not there, it can be left blankOrder Date. This field corresponds to the ordering data. If not there, it can be left blankReceived Date. This field corresponds to the ordering data. If not there, it can be left blankSupplier. Enter the information where the purchase was made. This field corresponds to the ordering data. The information is taken from the Supplier sub-menu in the Master File moduleItem Source. Sources of acquisition. By default, the information that can be selected is &quot;Buy&quot; and &quot;Prize / Grant&quot;Invoice. Billing number. Please enter if anyInvoice Date. Billing date. Please enter if anyPrice. Price of the copy purchased. There are various currency options available to customize the content","keywords":""},{"title":"Barcode Printing","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Barcode Printing","content":"Barcode Printing This sub-menu is a means of printing barcodes based on the copy number data that has been entered into SLiMS. The following is the sequence for printing a barcode using the Item Barcodes Printing sub-menu. Click the Item Barcodes Printing sub-menu, the display will appear as follows: Select the number of copies to be printed. Tip: use Shift key + click checkbox to quickly select more than one record in a sequence Note: A maximum of 50 data is printed once. In the Labels Print menu, it is possible to print more than one label, depending on the number of copies of the collection. Click the &quot;Add to Print Queue&quot; button to enter the selection into the print queue After adding the data to be printed, the amount of data to be printed appears. Value &quot;0&quot; will change, according to the amount of data to be printed Click &quot;Print Barcodes for Selected Data&quot; to start printing Labels can also be resized by clicking on the &quot;Change Print Barcode Settings&quot; button","keywords":""},{"title":"Helpers","type":0,"sectionRef":"#","url":"/docs/development-guide/Helpers","content":"","keywords":""},{"title":"Fungsi yang tersedia​","type":1,"pageTitle":"Helpers","url":"/docs/development-guide/Helpers#fungsi-yang-tersedia","content":""},{"title":"Sistem​","type":1,"pageTitle":"Helpers","url":"/docs/development-guide/Helpers#sistem","content":"__configdebugdebugBoxdddumpgetArrayDataisCliisDevipwriteLogxssFree "},{"title":"Angka dan Huruf​","type":1,"pageTitle":"Helpers","url":"/docs/development-guide/Helpers#angka-dan-huruf","content":"currencynumberv "},{"title":"Tampilan​","type":1,"pageTitle":"Helpers","url":"/docs/development-guide/Helpers#tampilan","content":"toastr "},{"title":"Http​","type":1,"pageTitle":"Helpers","url":"/docs/development-guide/Helpers#http","content":"Pengalihan​ redirectflash Url​ pluginUrlpluginNavigateTo "},{"title":"Sistem​","type":1,"pageTitle":"Helpers","url":"/docs/development-guide/Helpers#sistem-1","content":"__()​ fungsi __() digunakan untuk melakukan proses terjemahan bahasa pada SLiMS yang diproses oleh pustaka SLiMS\\Polyglot echo __('Home'); // keluaran dalam bahasa Indonesia menjadi &quot;Beranda&quot;  config()​ fungsi config() digunakan untuk memuat dan mengambil isi berkas konfigurasi yang tersimpan di folder config/ atau pengaturan sistem yang berada pada database di tabel setting. Fungsi ini berkaitan dengan pustaka SLiMS\\Config echo config('library_name'); // keluaran : &lt;nama_perpustakaan&gt; yang diatur pada modul sistem. // jika tidak tersedia maka makan mengembalikan dengan data kosong /* Apabila anda ingin alternatif keluaran lain jika konfigurasi yang dicari tidak ditemukan maka anda bisa menambahkan argument kedua setelah nama konfigurasi.*/ echo config('library_name', 'SLiMS'); // Keluaran : SLiMS jika konfigurasi library_name tidak ada /* Hasil keluaran dari fungsi ini sangatlah bermacam-macam, bergantung pada data apa yang disimpan di folder ```config/``` maupun tabel ```setting``` */ foreach(config('database.nodes', []) as $node) { dump($node); } /* Penggunaan titik diantara &quot;database&quot; dan &quot;node&quot; merupakan pemformataan pemanggilan data yang diberlakukan oleh pustaka ```SLiMS\\Config```. Dapat diartikan seperti ini isi file config/database.php */ return ['nodes' =&gt; [...]]; /* maka database merupakan nama file/konfigurasi nya, serta nodes merupakan data yang ada di dalam file/ruas tersebut */ // jika ditulis dalam native script $database = require SB . 'config/database.php'; foreach($database['nodes'] as $node) { dump($node); }  danger config() tidak dapat dipanggil apabila dipanggil pada file yang memang dijalankan pada proses bootstraping seperti lib/DB.php dll atau proses sebelum file/helper.inc.php debug()​ fungsi ini digunakan untuk melakukan proses awakutu / debug dimana anda dapat menampilkan isi dari sebuah proses yang sedang terjadi. debug('Judul debug', $_POST);  info fungsi ini akan bekerja ketika environment/lingkungan development/pengembangan dan memanfaatkan pustaka symfony/var-dumper dan berkaitan dengan fungsi dd() dan dump() debugBox()​ fungsi ini tidak berbeda jauh dengan debug(), perbedaannya terletak di output/keluaran nya, fungsi ini akan menghasilkan kelauran html yang terformat dan secara bawaan tidak menampilkan hasilnya jika tidak terdapat galat dan begitupun sebaliknya. debugBox($_POST);  dump()​ Fungsi ini memanfaatkan pustaka symfony/var-dumper yang memiliki tujuan seperti fungsi debug() namun dengan ciri khas dari symfony tanpa memberhentikan proses yang sedang berjalan. dump($variabel1, $variabel2, $dst);  dd()​ fungsi ini sama dengan fungsi dump(), perbedaannya ada pada perilaku yang diberikan jika dump() tidak memberhentikan proses dan dd() sebalinya karena akronim dari fungsi tersebut yaitu dump and die . dd($variabel1, $variabel2, $dst);  getArrayData()​ fungsi ini digunakan untuk mengambil data pada level terdalam pada sebuah tipe data array. Pada dasarnya ketika anda memiliki data dengan tipe array seperti ini: $array = [ 'level_1' =&gt; [ 'level_2' =&gt; [ 'level_3' =&gt; [ 'isi1' =&gt; 'satu', 'isi2' =&gt; 'dua', 'isi3' =&gt; 'tiga', 'isi4' =&gt; 'empat', 'isi5' =&gt; 'lima', ] ] ] ];  untuk dapat mengakses konten yang berada pada indeks isi1 maka kita perlu menulis seperti ini echo $array['level_1']['level_2']['level_3']['isi1'];  cara pemanggilan diatas akan berdampak galat apabila kita salah memasukan indeks pada level tertentu. Maka dengan mengguna fungsi ini kita dapat menentukan output apa yang akan keluar jika apa yang kita cari tidak ditemukan. Misal saja kita salah memasukan indeks array. echo $array['level_1']['level_20']['level_3']['isi1']; // akan muncul error undefined index level_20 // jika anda ingin menghindarinya maka perlu membuat seperti ini: $default = ''; if (isset($array['level_1'])) { if (isset($array['level_1']['level_2'])) { if (isset($array['level_1']['level_2']['level_3'])) { if (isset($array['level_1']['level_2']['level_3']['isi1'])) { $value = $array['level_1']['level_2']['level_3']['isi1']; } } } } echo $value??$default; // atau dengan versi yang lainnya  Maka dengan fungsi ini anda dapat menghindari penulisan skrip seperti diatas dengan ini: echo getArrayData($array, 'level_1.level_2.level_3.isi1'); // output satu jika tidak ditemukan maka akan kosong // atau jika anda ingin default output yang lain maka anda dapat menulis seperti ini echo getArrayData($array, 'level_1.level_20.level_3.isi1', 'output_lain'); // output satu jika tidak ditemukan maka akan kosong  isCli()​ fungsi yang digunakan untuk mengetahui apakah lingkungan kerja yang sedang anda gunakan apakah berada di Cli(Command Line Interface) atau tidak. if (isCli()) { // tulis kode anda disini }  isDev()​ fungsi ini digunakan untuk mengetahui kondisi environment/lingkungan SLiMS anda saat ini apakah ada dalam lingkungan development/pengembangan atau production/produksi. if (isDev()) { // kode yang ada didalam kondisi ini akan berjalan // jika SLiMS dalam mode enviroment development }  ip()​ fungsi ini digunakan untuk mendapatkan alamat ip yang mengakses SLiMS anda dengan memanfaatkan pustaka slims/ip. Selain mengambil alamat ip fungsi ini juga dapat dikondisikan ketika SLiMS anda berada di balik server proxy. // mendapatkan informasi alamat ip echo ip()-&gt;get(); // atau cukup echo ip(); // contoh : 36.125.25.100 // mendeteksi apakah SLiMS berada di balik server Proxy atau tidak. if (ip()-&gt;isBehindProxy()) { // tulisak kode ingin anda terapkan // jika berada di balik server proxy } // mendapatkan alamat ip server proxy echo ip()-&gt;getProxyIp(); // menetapkan informasi mengenai bagaimana mendapat // alamat ip pengakses (secara bawaan: REMOTE_ADDR) ip()-&gt;setSourceRemoteIp('CF-Connecting-IP'); // contoh disini menggunakan Cloud Flare // menetapkan informasi bagaimana mengetahui apakah // berada di balik server proxy atau tidak (secara bawaan: HTTP_X_FORWARDED_FOR) ip()-&gt;setProxyKey('CF-Connecting-IP');  writeLog()​ fungsi ini digunakan untuk membuat catatan sistem. Berikut penggunaannya: writeLog('tipe log, contoh system|member|staff', 'id bisa merujuk ke user_id dll', 'lokasi dimana catatan dibuat. Contoh: bibliography|circulation', 'pesan yang ingin dicatat');  xssFree()​ fungsi ini berguna untuk memfilter karakter agar terbeas dari karakter html. echo xssFree('&lt;h1&gt;Hai&lt;/h1&gt;'); // output : Hai  "},{"title":"Angka dan Huruf​","type":1,"pageTitle":"Helpers","url":"/docs/development-guide/Helpers#angka-dan-huruf-1","content":"currency()​ fungsi berguna untuk memformat sebuah karakter angka menjadi angka yang lengkap dengan format mata uang, menggunakan pustaka slims/currency yang bergantung dengan ekstensi php-intl berdasarkan bahasa yang digunakan oleh SLiMS atau jenis mata uang yang diatur pada submenu currency settings pada modul sistem. echo currency(3000); // output : Rp. 3.000,00 // apabila ekstensi php-intl tidak tersedia // maka outputnya akan dikembalikan seperti apa yang diinputkan echo currency(3000); // output : 3000  number()​ fungsi ini digunakan untuk memformat sebuah inputan menjadi tipe data tertentu seperti, float,currency,integer,decimal. number(&quot;3.125&quot;)-&gt;toFloat(); // output: 3.125 number(3125)-&gt;toCurrency(); // output: Rp. 3.125,00 number(3.125)-&gt;toInteger(); // output: 3 number(3125)-&gt;toDecimal(decimalNumber: 3, decimalSeparator: '.', thousand: ','); // output: 3,125.000  Selain mengubah sebuah inputan menjadi tipe data tertentu maka fungsi ini juga bisa digunakan untuk mengetahui bagaimana mengambil posisi, memecah dari karakter yang diinputkan. $input = number(31250); // mendapatkan panjang karakter echo $input-&gt;len(); // output : 5 // mendapatkan posisi tertentu dari $input echo $input-&gt;get(0,3); // output : 312 $input-&gt;chunk(2); // output array : [31,50] echo $input-&gt;mod(5); // output : 0  Selain posisi fungsi ini juga bisa membulatkan atau menyederhanakan angka. $input = number('3.8655'); // pembulatan dengan angka desimal tertentu echo $input-&gt;round(); // output : 4 // pembulatan dengan jumlah angka desimal tertentu echo $input-&gt;round(2); // output : 3.87 // pembulatan keatas tanpa mempertimbangkan aturan desimal echo $input-&gt;ceil(); // output : 4  v()​ fungsi ini digunakan untuk membuat karakter acak yang nanti akan digabungkan dengan nama file statis seperti file dengan ekstensi .js dan .css dengan tujuan untuk memperbaharui caching file statis di Web Browser/Peramban Web. Tiap karakter yang dihasilkan akan tetap sama selama environment dalam mode production dan akan berubah ketika anda masuk ke dalam modul sistem pada menu pengaturan sistem karena pada event tersebut akan menghasilkan nomor acak pada konfigurasi $sysconf['static_file_version'] yang dibutuhkan oleh fungsi ini. $script = '&lt;script src=&quot;' . v('app.js') . '&quot;/&gt;'; echo $script; // contoh output : &lt;script src=&quot;app.js?v=a5f86&quot;/&gt;  "},{"title":"Tampilan​","type":1,"pageTitle":"Helpers","url":"/docs/development-guide/Helpers#tampilan-1","content":"toastr()​ fungsi ini digunakan untuk menampilkan notifikasi khusus yang memanfaatkan pustaka javascript yaitu toastr. Gaya yang ditampilkan seperti success,info,warning, dan error. toastr('Tulisa pesan anda disini')-&gt;success(); // atau jika anda ingin judul notifikasi yang berbeda toastr('Tulisa pesan anda disini')-&gt;success('Yay Berhasi'); // metode success(), dapat diganti menjadi info(), warning(), dan error() // Apabila anda salah mengetikan gaya notifikasi nya // maka yang akan tampil adalah notifikasi bawaan dari // browser yang sedang digunakan. toastr('Tulisa pesan anda disini')-&gt;sukses();  "},{"title":"Http​","type":1,"pageTitle":"Helpers","url":"/docs/development-guide/Helpers#http-1","content":""},{"title":"Pengalihan​","type":1,"pageTitle":"Helpers","url":"/docs/development-guide/Helpers#pengalihan-1","content":"redirect()​ fungsi ini digunakan untuk mengalihkan suatu halaman ke halaman lain yang memanfaatkan pustaka slims/redirect. // pengalihan ke laman lain redirect('https://foo.com'); // pengalihan ke halaman tertentu didomain // yang sama redirect('/page/login'); // Ke path/page tertentu di SLiMS redirect()-&gt;toPath('login'); // domain.com/?p=login // Mengalihkan dengan metode refresh redirect()-&gt;refresh('?p=login'); // Mengalihkan ke halaman sebelumnya // misal akses dari halamanform $_POST dari ?p=member ke ?p=login redirect()-&gt;back(); // menghalihkan dengan mengikutkan // informasi response header redirect()-&gt;withHeader('X-Rate-Limit', 59)-&gt;to('/'); // atau redirect()-&gt;withHeader([ ['X-Custom-Header', 'foo'], ['X-Rate-Limit', 59] ])-&gt;to('/'); // mengalihkan halaman dengan meninggalkan pesan, // memanfaatkan pustaka slims/flash redirect()-&gt;withMessage('login_error', 'Maaf username dan password salah')-&gt;back(); // mengalihkan halaman tertentu via pustaka jQuery SimbioAJAX redirect()-&gt;simbioAJAX('url yang akan dirujuk'); // mengalihkan dengan metode http POST redirect()-&gt;simbioAJAX(url: 'url yang akan dirujuk', data: json_encode(['age' =&gt; 20, 'name' =&gt; 'Foo'])); // mengalihkan pada selector tertentu redirect()-&gt;simbioAJAX(selector: '#preview', url: 'url yang akan dirujuk'); // pada posisi tertentu redirect()-&gt;simbioAJAX(position: 'parent.', selector: '#preview', url: 'url yang akan dirujuk'); // pengalihan dengan waktu delay dakan detik redirect()-&gt;simbioAJAX(timeout: 5, url: 'url yang akan dirujuk');  flash()​ fungsi ini digunakan untuk menampilkan pesan sementara atau temporer ketika proses http telah selesai. Pada SLiMS ini digunakan ketika proses login tidak berhasil atau dapat digunakan untuk kebutuhan lain. $login = false; if ($login === false) { flash('login_error', 'Maaf login tidak berhasil'); redirect()-&gt;back(); } // mengecek apakah ada pesan login error atau tidak if (flash()-&gt;has($key = 'login_error')) { echo flash()-&gt;get($key); } // atau jika anda ingin mengecek untuk lebih dari satu // pesan if ($key = flash()-&gt;inlcudes('wrong_password','csrf_failed','empty_field','captchaInvalid')) { echo flash()-&gt;get($key); } // atau jika anda ingin menampilkan pesan dengan template // tertentu berdasarkan kategori seperti danger,warning,success, info if ($key = flash()-&gt;inlcudes('wrong_password','csrf_failed','empty_field','captchaInvalid')) { flash()-&gt;danger($key); // ganti dengan gaya yang disebutkan diatas }  "},{"title":"Url​","type":1,"pageTitle":"Helpers","url":"/docs/development-guide/Helpers#url-1","content":"pluginUrl()​ fungsi ini berguna untuk membuat url pada plugin yang aktif/sedang digunakan. echo pluginUrl(); // output : /admin/plugin_container.php?mod=system&amp;id=a86efea58.... echo pluginUrl(['action' =&gt; 'delete']); // output : /admin/plugin_container.php?mod=system&amp;id=a86efea58....&amp;action=delete // mereset url dengan format plugin_container.php?id=&lt;id&gt;&amp;mod=&lt;mod&gt; echo pluginUrl(reset: true);  pluginNavigateTo()​ fungsi ini digunakan untuk menghasilkan url yang berkaitan dengan plugin yang sedang aktif baik berada dalam folder yang sama atau berbeda. /** * Struktuer direktori * /plugins * --- /satu * ------ satu.plugins.php * ------ satu_menu_pertama.php * ------ satu_menu_kedua.php */ // didalam file satu_menu_pertama.php redirect()-&gt;simbioAJAX(pluginNavigateTo('satu_menu_kedua.php')); // maka halaman akan teralihkan ke file satu_menu_kedua.php  "},{"title":"Bibliographic List","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Bibliographic List","content":"Bibliographic List This sub-menu is used to view bibliographic data that already exists in the SLiMS database. With the 9.3.1 release, this sub-menu has taken a new twist, with the appearance of the book cover. This will make it easier for librarians or library managers to identify collections to be inputted. At least visually it will be seen whether a title has been inputted or not, when a search has been performed. The information displayed in this sub-menu are: Delete (in form of checkbox)Edit (by clicking the pencil icon)TitleISBN/ISSNCopiesLast Update This sub-menu allows you to sort the list by title, ISSN / ISBN, number of copies, and the last date the data was updated. With this sub-menu, bibliographic data can be searched for editing or deletion. Here are the steps for editing or deleting bibliographic data. Find the bibliographic data that will be converted / entered by typing the title in the &quot;Search Bibliography&quot; field, clicking &quot;Search&quot;Once found, put a check mark on the data box to be deleted then click &quot;Delete Selected Data&quot; or if you want to edit the bibliographic data, click the &quot;Edit&quot; icon (left of the title) to start editing data or click 2 (double) times on field for the title of the bibliography you wish to editA display of bibliographic data that is still not active appears (will appear gray)Activate edit mode by clicking the &quot;Edit&quot; button in the lower right corner or the upper right cornerChange the part that needs editing, then click &quot;Save Change&quot; In this sub-menu, there is a new feature (added in 9.2.1), namely &quot;Advanced Filter&quot; which allows us to filter bibliographic data by categories: Hide in OPACPromote to Homepage As indicated by pointer no. 1, click on the button to bring up the filters as shown in the image above. Then, in the following image, it is shown how to search using these filters. To show ONLY collections with hidden status, select the option &quot;Hide&quot;To show ONLY collections with non-hidden status, select the option &quot;Show&quot;Select the &quot;All&quot; option to show all collections whether hidden or not Filters as shown in the picture above, are filters for collections whose status is hidden or not. To display ONLY collections with status not being promoted, select the option &quot;Don't Promote&quot;To display ONLY collections with status being promoted, select the option &quot;Promote&quot;Select the option &quot;All&quot; to display all collections whether the status is not promoted or vice versa Meanwhile, the filters shown in the image above are filters for collections whose status is being promoted or not. Don't forget, after selecting the desired filter combination, to get the search results out, click on the &quot;Search&quot; button.","keywords":""},{"title":"Catalog Printing","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Catalog Printing","content":"Catalog Printing This feature can be used to print catalog cards. How to print is almost the same as how to print barcodes and book labels. The result of printing is as shown below: As of SLiMS 9 Bulian release code 9.3.0, this sub-menu is having an option to make modification on what should be printed. Click on the right upper button called &quot;Change Print Catalog Settings&quot; and you'll see this picture below: Self List Card. If you don't want to print main catalog, choose &quot;Hide&quot; insteadTitle Card. If you don't want to print the catalog card for title, choose &quot;Hide&quot; insteadAuthor Card. If you don't want to print catalog card for author, choose &quot;Hide&quot; insteadSubject Card. And if you don't want to print catalog card for subject, choose &quot;Hide&quot; instead Base on the settings you choose, you will then have the card needed to print.","keywords":""},{"title":"Checkout Items","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Checkout Items","content":"Checkout Items This sub-menu provides information about the copies whose status is being borrowed. This sub-menu is also equipped with a search facility using the item number and bibliographic title approach. The information contained in this sub-menu is: Item CodeMember IDTitleLoan DateDue Date","keywords":""},{"title":"Configuration","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Copy Cataloging/Configuration","content":"Configuration To add a server whose meta data will be used when copy cataloging, you can add it via the Cataloging Servers sub-menu in the Master File module. To start adding, click on the &quot;Add New Server&quot; button which will bring up a form like the following: Server Name. Enter the name of the server you want to appear in the list URI. Is the location of the application page that provides metadata that will be retrieved. Example: http://ciseeng.web.id/slims. The link is the location of the server that provides data for P2P services Note: Currently supported protocols for data copying are http and https protocols. Server Type. Fill in the type of copy cataloging service that your server uses as a reference. Is it the MARC SRU, Z3950, or P2P. When finished, click on the &quot;Save&quot; button to save the configuration that you have made. The list of servers that you have created will appear when you copy cataloging the Bibliography module.","keywords":""},{"title":"MARC SRU","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Copy Cataloging/MARC SRU","content":"MARC SRU A copy cataloging feature that retrieves data from applications that use MARC (Machine Readable Catalog) metadata. By default, this service is linked to the database of the National Library of Indonesia. Collection searches can be approached through: ISBN/ISSNTitle/Series TitleAuthorsAll fields After getting the desired search results, tick on the bibliographic data collection to be copied. Then click on the &quot;Save Marc Records to Database&quot; button to start copying.","keywords":""},{"title":"P2P Service","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Copy Cataloging/P2P Service","content":"P2P Service P2P Service is a catalog copy feature created from Senayan 3 Stable 14. The basic concept of this feature is to exchange bibliographic data between SLiMS users. P2P Service makes use of SLiMS's xml facility to share bibliographic collections. To use it, simply click P2P Service, enter a keyword and select the location / url / library that you are looking for. If SLiMS finds the collection it is looking for, it will be displayed. Update: On the release of SLiMS 9 Bulian with the latest release tag, the MARC SRU service and the Z3950 SRU service can also download cover images, provided the cover image data is available in the captured dataset. In SLiMS 9 Bulian, copy cataloging using P2P Service is equipped with the ability to download book cover data and attachments (if such data is available). The picture above shows the bibliographic data to be copied, has book cover data and digital files. Bibliographic data can be copied without having to copy the available digital files. However, existing digital data cannot be copied without copying the bibliographic data. The &quot;Details&quot; button that appears on the image, will display the data entry, as an indication of whether the data to be copied provides good and complete information or not. As shown in the following image. When the &quot;Original Uri&quot; button is clicked, you will be taken to the original page, where the data is located.","keywords":""},{"title":"Z3950 SRU","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Copy Cataloging/Z3950 SRU","content":"Z3950 SRU It is a copy cataloging feature that utilizes the Z3950 protocol as a data exchange protocol. By default, this service is linked to the database of the Library of Congress, United States of America. Collection searches can be approached through: ISBN/ISSNTitle/Series TitleAuthorsAll fields After getting the desired search results, tick on the bibliographic data collection to be copied. Then click on the &quot;Save Z3950 Records to Database&quot; button to start copying.","keywords":""},{"title":"Data Export","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Data Export","content":"Data Export This sub-menu is used to retrieve bibliographic data in the SLiMS application, which can then be included in other SLiMS applications. This process can be understood as data exchange. The export process will generate a .csv file. The .csv format when we look at the contents, sequentially contains the following data: TitleGMDEditionISBN/ISSNPublisherPublishing YearCollationSeries TitleCall NumberLanguagePublishing PlaceClassificationAbstract/NotesCover File NameAttachment File NameAuthorSubjectsItem Code For example the output of a .csv file, when opened using a text editor: *&quot;Corruption and development&quot;,&quot;Text&quot;,&quot;&quot;,&quot;9780714649023&quot;,&quot;Taylor &amp; Francis Inc.&quot;,&quot;1998&quot;,&quot;166 p. : ill. ; 22 cm.&quot;,&quot;&quot;,&quot;364.1 Rob c&quot;,&quot;English&quot;,&quot;London&quot;,&quot;364.1/322/091724 21&quot;,&quot;The articles assembled in this volume offer a fresh approach to analysing the problem of corruption in developing countries and the k means to tackle the phenomenon.&quot;,&quot;corruption_development.jpg&quot;,&quot;&quot;,&quot; &lt;Robinson,Mark&gt;&quot;,&quot;&lt;Corruption&gt;&lt;Development&gt;&quot;,&quot;&lt;B00006&gt;&quot;* In the export process there are options: Field Separator. Defines the delimiter between fieldsField Enclosed with. Defines an opening / closing characterRecord Separator. Separators between dataNumber of Records to Export (0 for all records). Amount of exported dataStart From Record. The first data to be exported starts fromPut columns names in the first row. When this option is checked (Yes), the name of each column will be displayed in the first row of the exported file, as listed in the database To clearly see the column patterns used in bibliographic data in SLiMS, open the .csv file using a spreadsheet application such as MS-Excel or LibreOffice Spreadsheet. Note: As of the 9.2.0 release, this sub-menu includes the feature of bringing up header fields in the export results, so that it will display the fields mentioned above.","keywords":""},{"title":"Data Import","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Data Import","content":"Data Import This sub-menu is used to retrieve bibliographic data from outside SLiMS in csv format (or from the SLiMS database in .csv format). For data import instructions, the SLiMS Development team has made in detail several conversion manuals for the following applications: AthenaeumCDS/WIN/SIPISIS The manuals can be downloaded at: Manual migrasi data dari Athenaeum - https://goo.gl/pPUY9BManual migrasi dari CDS/WIN/SIPISIS - https://goo.gl/D8VLFP For conversion from Athenaeum, the SLiMS Development team once created an online migration tool which can be accessed on the following page: Senayan Database Converter 0.1 - https://goo.gl/jD5crE Note: The application has been stopped in development for a long time. There could be some things that are irrelevant. In the import process, there are several options: File To Import. The file to be imported has the extension .csv and is in accordance with the .csv format used by SLiMSField Separator. Separators between segments used. No need to changeField Enclosed with. The opening / closing character of a segment. It doesn't need to be changedNumber of Record to Import (0 for all records). Amount of data to importStart from record. The first data to import, starts atThe first row is the columns name. This section is related to the previous sub-chapters. If in the first row of the exported file there is a column name, as listed in the database, then when importing, check the (Yes) option As of the 9.2.0 release, this sub-menu includes a feature to ignore the header field in the export result (if any), so that it will display the fields mentioned above.","keywords":""},{"title":"Item Export","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Item Export","content":"Item Export The output of the export item from SLiMS is as follows: *&quot;B00001&quot;,&quot;&quot;,&quot;Reference&quot;,&quot;INV/B00001&quot;,&quot;0000-00-00&quot;,&quot;&quot;,&quot;&quot;,&quot;MyLibrary&quot;,&quot;0000-00- 00&quot;,&quot;&quot;,&quot;&quot;,&quot;1&quot;,&quot;&quot;,&quot;500000&quot;,&quot;Rupiah&quot;,&quot;0000-00-00&quot;,&quot;2008-12-26 22:11:10&quot;,&quot;2008-12-26 22:14:13&quot;,&quot;Ajax : creating Web pages with asynchronous JavaScript and XML&quot;* The output is a reference if you want to enter data exemplars .csv to SLiMS. To clearly see the column patterns used in data copies in SLiMS, open the .csv file using a spreadsheet application such as MS-Excel or LibreOffice Spreadsheet. Just like the previous sub-chapters, in this sub-menu when exporting data copies there is also a &quot;Put columns names in the first row&quot; field. When this option is checked (Yes), the name of each column will be displayed in the first row of the exported file, as listed in the database.","keywords":""},{"title":"Item Import","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Item Import","content":"Item Import This sub-menu is used to enter data copies into the SLiMS database. If this activity is carried out from one SLiMS database to another, the Item Import is carried out after the Data Import. This means that the copies will adjust the bibliographic data that has been imported first. Just like the previous sub-chapters, when importing data copies in this sub-menu, there is also a field &quot;The first row is the columns name&quot;. This section is related to the previous sub-chapters. If in the first row of the exported file there are column names, as listed in the database, then when importing, check the (Yes) option.","keywords":""},{"title":"Item List","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Item List","content":"Item List This sub-menu is used to view number of copies in the SLiMS database. The informations contained within the grid for this sub-menu are: DeleteEditItem CodeTitleCollection TypeLocationCall NumberLast Updated With this sub-menu, you can also edit and delete copies. Here are the steps for editing or deleting copy data: Find the item(s) that will be edited / deleted by typing the title or the item code of the copy in the &quot;Search&quot; field then clicking on the &quot;Search&quot; buttonOnce found, put a check mark on the data to be deleted then click &quot;Delete Selected Data&quot; or click the edit icon (left of the title) to start editingFor editing mode, a display of data copies that is not active will appear (will appear in gray background color)Activate edit mode by clicking the &quot;Edit&quot; button in the lower right corner or the upper right cornerEdit the necessary sections, then click &quot;Save Change&quot;","keywords":""},{"title":"MARC Export and Import","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/MARC Export and Import","content":"MARC Export and Import This feature is use to export bibliographic data from SLiMS into .mrc format or import MARC data with either .mrc or .xml extension. Before using this feature, the requirement is that the SLiMS server has PEAR, FILE_MARC and Structures_LinkedList installed. On servers running the GnU / linux operating system (Ubuntu, for example), see how to install it on this blog: https://goo.gl/2bI4tXhttps://goo.gl/dejszi If it is installed, what will appear is: If you have a MARC file, for example .mrc (if you don't have one, you can download a sample Marc file with a .mrc extension at http://opac.perpusnas.go.id) You can process it by clicking on the &quot;Browse&quot; button. and select the files you want to import. &quot;Number of Record to Import&quot; means how many listings / data will be imported, &quot;0&quot; (zero) means all listings in the file.","keywords":""},{"title":"loanhistory","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Circulation/loanhistory","content":"loanhistory Contains data on transactions that have been carried out. The data that appears consists of: Member IDMember NameMembership TypeItem CodeTitleLoan dateDue dateLoan Status This sub-menu provides the facility to print the loan history list by clicking on the &quot;Print Current Page&quot; button and export the loan history list into spreadsheet format by clicking on the &quot;Export to spreadsheet format&quot; button. In addition, it is also possible to search historical borrowing data. The search for a list of loan history is carried out based on: Member ID/Member NameMembership TypeTitleItem CodeLoan Date FromLoan Date UntilLoan StatusLocationRecord each page This facility can be displayed by clicking on the &quot;Show More Filter Options&quot; button.","keywords":""},{"title":"overduelist","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Circulation/overduelist","content":"overduelist It is a facility to find out members with late status. The information displayed in this facility is: Member IDMember NameOther member data such as Address, Email, and No. TelephoneItem numberTitle (and book price)Time overdueLoan DateDue Date With this sub-menu we can also print and search for overdued data. Overdued data search is carried out by category: Member ID/Member NameLoan Date FromLoan Date UntilRecord each page","keywords":""},{"title":"quickreturn","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Circulation/quickreturn","content":"quickreturn To make a quick return, without having to enter the user account, directly enter the ID of the copy (barcode) of the collection to be returned. After the barcode/item number was entered, the transaction is automatically recorded in the user data who make the return, through this sub-menu.","keywords":""},{"title":"reservation","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Circulation/reservation","content":"reservation This sub-menu is used to view the list of collections that are being reserved by members. Previously, this sub-menu only recording reservation coming from the reservation tab within user circulation process. And the previous meaning of &quot;reservation&quot; is to explain a reservation made for items that having the status of being loan or on loan. Since SLiMS 9 Bulian release code 9.4.0, this sub-menu is also receiving data from reservation made by user from the OPAC's Member Area. The information contained in this menu is: Item CodeTitleMember NameMember IDReserve Date You can also create filter to search the data you need regarding reservation that still included in this sub-menu. Once the item is circulated from the Start Transaction sub-menu, the considered item number will disappear from the reservation list.","keywords":""},{"title":"Labels Printing","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Bibliography/Labels Printing","content":"Labels Printing With this sub-menu we can print collection labels based on the bibliographic data that has been entered into SLiMS. The following is the sequence of printing labels using the Labels Printing sub-menu. Click Labels Printing, the display will appear as follows: Select the bibliography on which to print the label. Tip: use Shift key + click checkbox to quickly select more than one record in a sequence Note: A maximum of 50 data is printed once. In the Labels Print menu, it is possible to print more than one label, depending on the number of copies of the collection. Click the &quot;Add to Print Queue&quot; button to enter the selection into the print queue After adding the data to be printed, the amount of data to be printed appears. Value &quot;0&quot; will change, according to the amount of data to be printed Click &quot;Print Labels for Selected Data&quot; to start printing Labels can also be resized by clicking on the &quot;Change Print Label Settings&quot; button","keywords":""},{"title":"loanrules","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Circulation/loanrules","content":"loanrules It is a facility to define specific loan rules based on Member Type, Collection Type, GMD. The rules defined in this facility are the same as when we created a rule in the Member Type sub-menu by filling in the fields: Loan LimitLoan PeriodReborrow LimitFines Each DayOverdue Grace Period An example of defining Loan Rules: Your library has 3 collection types: Book, Audio Visual, ThesisOne of the membership type in your library is: Students. With a total borrowing allowance of 2 collections, namely: 1 for the Thesis collection type and 1 for the Audio Visual collection typeFor that, of course you must have a membership type &quot;Student&quot; with a total borrowing of 2 collectionsThen in Loan Rules, which must be defined: Membership type &quot;Student&quot;, loan limit for collection type &quot;Audio Visual&quot; is 1Membership type &quot;Student&quot;, loan limit for collection type &quot;Thesis&quot; is 1 When you are finished defining Loan Rules, click on the &quot;Save&quot; button to save the defined rules. PLEASE REMEMBER that this is the additional rules of loan with a spesific purposes. If the loan rules defined in the Membership Type is enough for your institution, you should not add another set of loan rules within this sub-menu.","keywords":""},{"title":"member export","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Membership/member export","content":"member export This menu is used to retrieve member data in the SLiMS database and the result is data in .csv format. To clearly see the column patterns used in member data in SLiMS, open the .csv file using a spreadsheet application such as MS-Excel or LibreOffice Spreadsheet. Just like the previous sub-chapters, in this sub-menu when exporting data copies there is also a &quot;Put columns names in the first row&quot; field. When this option is checked (Yes), the name of each column will be displayed in the first row of the exported file, as listed in the database.","keywords":""},{"title":"view member list","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Membership/view member list","content":"view member list Used to view the list of members who have registered into the system. The information displayed is: DeleteEditMember IDMember NameMembership TypeEmailLast Updated If there is a member whose membership period has expired, we can renew it by clicking on the edit menu represented by a pen icon (in the &quot;Edit&quot; field) or double-clicking on the member's data. Membership extension can be done by ticking the checkbox &quot;Extend&quot;. Alternatively, it can also be done by clicking on the &quot;View Expired Member&quot; button, ticking the checkbox for the member data to be extended, then clicking &quot;Extend Selected Member (s)&quot;.","keywords":""},{"title":"add new member","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Membership/add new member","content":"add new member Facility to add new member data to the SLiMS system. The member data entered are: Member ID. Use the ID that already use before. Whether you are using citizen identification number or other form of numbering for your member.Member Name. Member's Full NameBirth Date. Date of birth, to be filled in according to the data on the identity cardMember Since. Registered date. The time in this field will change automagically if the respective membership is extendedRegister Date. First registered dateExpiry Date. Expiration date. By default, the Auto Set option is checked. This means that the membership period will be calculated according to the selected membership type. However, if the check mark is removed, the expiration date is determined manuallyInstitution. Name of institution, name of office or name of organizationMembership Type. Membership type which will be defined later in the Member Type sub-menuSex. Adjust the content based on information given by your userAddress. Home or office addressPostal CodeMail Address. Content of this field can be similar as the Address field. This section is intended if the mailing address is different from the home addressPhone NumberFax NumberPersonal ID Number: Identity number listed on KTP, SIM, KITAS, Passport, etc.Notes. Field notes that can be filled in to provide a brief description of the user. The contents of this section should only be seen by the librarianPending Membership. If this section is checked, then the member concerned will not be able to circulate, even though it is still active. This can be applied as a sanction against members who violate library regulationsPhoto. Upload member photo files or you can take picture with the in-app photo style provided using your webcamEmailNew Password and Confirm New Password. Enter the password to access the Member Area page on the OPAC","keywords":""},{"title":"member type","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Membership/member type","content":"member type This menu is the rules used by SLiMS, for loan transactions, in addition to additional rules in the Loan Rules sub-menu. Click on the &quot;Add New Member Type&quot; button to add a membership type. Within this membership type are defined: Member Type Name. The name of the membership type applied by the libraryLoan Limit. Number of copies that can be borrowedLoan Period (In Days). The length of time to borrowReserve. Book order feature that is currently on loan. There is an &quot;Enable&quot; option to enable this feature. Select &quot;Disable&quot; to turn off this featureReserve Limit. Number of copies that can be reserveMembership Period (In Days). The time specified for the membership period is adjusted to the applicable provisions in the libraryReborrow Limit. Number of copies that can be borrowed backFine Each Day. How much money counted as fines per dayOverdue Grace Period. Delay tolerance period (in days)","keywords":""},{"title":"finish","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Stocktake/initialize/finish","content":"finish Click this sub-menu when we have finished taking inventory. In this sub-menu there is a &quot;Purge Lost Item&quot; option. If we check &quot;Yes&quot;, then the duplicate data in the sub-menu &quot;Current Lost Items&quot; will be deleted from the system. When unchecked, duplicate data in the &quot;Current Lost Item&quot; sub-menu will be marked with a &quot;Missing&quot; status. This sub-menu can only be executed by super admin account.","keywords":""},{"title":"listupload","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Stocktake/initialize/listupload","content":"listupload This sub-menu is used to upload data for items number that will be recorded in the stock take using text format (file type .txt). The file display is as shown. Click on the &quot;Browse&quot; button to insert a previously created text file. Then click on the &quot;Upload File&quot; button to start uploading the text file. If the text file upload process goes well, the page will inform you that &quot;Successfully upload stock take xxx.txt, xxx item codes scanned&quot;, as described in the image above.","keywords":""},{"title":"starttransaction","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Circulation/starttransaction","content":"starttransaction Transactions through this sub-menu begin by entering the name or ID of the member concerned. After entering the member lending menu, the information that appears is: Member NameMember EmailRegister DateMember IDMember TypeExpiry DatePhoto of member Below that are tabs: Loans. To record borrowing transactionsCurrent Loans. Current loan listReserve. For the needs of ordering copies whose status is being borrowedFines (fines). Gather information about borrowing fines (if any). Debits and penalties are recorded in this tabLoan History. Loan history made by the member In the Current Loans tab, there are facilities to return and extend the loan. Note: After completing the process of borrowing (Loans) and ordering (Reserve) do not forget to click on the &quot;Finish Transaction&quot; button. Without pressing this button, all transaction processes will not be recorded in the system and loan transactions cannot be carried out for the next user. Since the Senayan3-stable13 version, a transaction note printing feature is available. To activate this feature, the first step that must be done is to activate the Print Circulation Receipt section in the System Configuration sub-menu. See the System module documentation. The proof of circulation print option will appear after clicking on the &quot;Finish Transaction&quot; button. Starting from the Senayan3-stable11 version, it is possible to manually determine the date of loan and return. That is, the date of borrow and return can be determined not based on the configuration of the rules that have been determined through the Member Type or Loan Rules. For activation, please look at the System Configurations sub-menu in the System menu. Determining the Loan and Due date manually can be done by clicking the date we want to change.","keywords":""},{"title":"report","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Stocktake/initialize/report","content":"report This sub-menu will display the progress of the current stock take activity.","keywords":""},{"title":"member import","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Membership/member import","content":"member import This menu is used to retrieve member data from outside the SLiMS application. The imported data format is .csv. The data columns to be imported must match, as exemplified by the export results discussed in the previous sub-chapter. Just like the previous sub-chapters, when importing data copies in this sub-menu, there is also a field &quot;The first row is the columns name&quot;. This section is related to the previous sub-chapters. If in the first row of the exported file there are column names, as listed in the database, then when importing, check the (Yes) option.","keywords":""},{"title":"stocktakehistory","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Stocktake/stocktakehistory","content":"stocktakehistory The Stock Take Module is a facility available at SLiMS to assist librarians in carrying out collection inventory activities. This activity aims to re-adjust all collections in the library so that you can find out how many collections are available, the number of collections that are missing, the number of collections that are damaged, and the collections that are being borrowed by library patron. When the inventory process starts, all collections except those that are being borrowed (with the status &quot;On Loan&quot;) will be considered lost, then enter the &quot;Current Lost Item&quot; sub-menu until the collection is entered in the exemplary data in the inventory process. In this module, when the stock take process has not been activated, you will only find these 2 (two) menus: Stock Take HistoryInitialize","keywords":""},{"title":"logs","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Stocktake/initialize/logs","content":"logs Displays a list of messages encountered while the stock take process is running.","keywords":""},{"title":"membercard print","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Membership/membercard print","content":"membercard print This menu is used to print membership cards. How to print it is the same as how to print a label or barcode. The information contained in this membership card includes: Member IDMember NamePersonal ID NumberAddress/Phone NumberMember BarcodePhoto (if exist)The identity library on the other side of the card, which contains: Library rulesLibrary websiteLibrary emailEtc. In SLiMS 9 Bulian, a new card format is provided, namely &quot;Classic&quot;. So, there are 2 (two) card formats that can be used by users. View of Classic card type View of Old card type To change the appearance of a member card that will be printed, please click on the &quot;Member Card Print Settings&quot; button then select the desired card theme. To select the desired membership card theme, click on the &quot;Activate&quot; button. Then to change the settings for each type of card, click on the &quot;Customize&quot; button.","keywords":""},{"title":"resync","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Stocktake/initialize/resync","content":"resync This sub-menu is used when we want to update (repair) copy data (and / or bibliographic data) when the stock take process is active. For the record, it is possible to correct copies of data (and / or bibliographies), because it is necessary to correct data from related copies. For example, the title on the copy was mistyped or incomplete. Once repaired, click on the &quot;Resynchronize now&quot; button.","keywords":""},{"title":"lostitems","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Stocktake/initialize/lostitems","content":"lostitems Will display a list of unprocessed copies to be recorded in stock take.","keywords":""},{"title":"current","type":0,"sectionRef":"#","url":"/docs/user-guide/Modules/Stocktake/initialize/current","content":"current Stock take activity is carried out in this sub-menu, namely by starting to enter the item number from each copy. There is a field &quot;List stocktakes by:&quot; which can be selected &quot;Current User Only&quot;, meaning that the list of copies that are visible is the one inventoried by the librarian concerned or &quot;All User&quot;, meaning that the list of copies inventoried is the copy that is entered in data by all librarians who carry out inventory.","keywords":""},{"title":"Librarian Login","type":0,"sectionRef":"#","url":"/docs/user-guide/OPAC/Librarian Login","content":"Librarian Login In the SLiMS 9 Bulian version, login access to the SLiMS administration page is not displayed as in the previous version. Don't worry though. Login access can be accessed by entering the address as shown below: Or an easy way without having to remember the address, is to click on the link, for example &quot;Information&quot;, which will bring up the address http: //localhost/slims9_bulian/index.php?p=libinfo. Replace the word &quot;libinfo&quot; with the word &quot;login&quot; so it looks like this, http: //localhost/slims9_bulian/index.php?p=login. Then enter to bring up login access. Tip​ After this login access appears, don't forget to bookmark the page. So that it can appear on the bookmark bar in the browser you use. By bookmarking the access, then, if you want to log in, you just click on the bookmark. Several improvements to the login page were made to make access to the Administration Page even easier. Remember me is a feature to extend login time after login. When this feature is checked during login, the system will ignore the login session. Meanwhile, Forgot my password is used to make it easier for Librarians to recover passwords. When Librarian uses this feature, he will be directed to the password reset page. Enter the email address you registered in the System&gt; Librarian and System Users module, check the &quot;I'm not a robot&quot; field and then click on the &quot;Reset my password&quot; button. Then the system will inform that an email has been sent for the process of changing the password. Check your inbox in your email, then you will receive an email like the following picture. Click on the &quot;Reset Password&quot; button to start changing your password and you will be taken to a page as shown below. Enter the replacement password you want and continue by clicking on the &quot;Update&quot; button. After clicking on the button, you will be taken to the Administration login page. Then log in with the password you have changed. Note​ To be able to use this feature, the computer (with SLiMS in it) that you use must be connected to the internet. Due to the provided password change service, it is on the internet. If the SLiMS you are using is already on the internet, no further settings are needed to use this feature.","keywords":""},{"title":"OPAC Menus","type":0,"sectionRef":"#","url":"/docs/user-guide/OPAC/OPAC Menus","content":"","keywords":""},{"title":"Information​","type":1,"pageTitle":"OPAC Menus","url":"/docs/user-guide/OPAC/OPAC Menus#information","content":" Provides brief information about the library. Starting from the address, telephone number, to the types of collections provided by the library. In order to change the content of this page, you must have access to the SLiMS administration page. "},{"title":"News​","type":1,"pageTitle":"OPAC Menus","url":"/docs/user-guide/OPAC/OPAC Menus#news","content":" This page is intended as a page for delivering news on activities carried out by the Library. This page can be used as a simple Content Management System (CMS). With this feature, libraries can make coverage of library activities. "},{"title":"Help​","type":1,"pageTitle":"OPAC Menus","url":"/docs/user-guide/OPAC/OPAC Menus#help","content":" This menu provides a simple explanation of how to perform a search. "},{"title":"Librarian​","type":1,"pageTitle":"OPAC Menus","url":"/docs/user-guide/OPAC/OPAC Menus#librarian","content":" This menu provides the librarian's profile information. "},{"title":"Member Area​","type":1,"pageTitle":"OPAC Menus","url":"/docs/user-guide/OPAC/OPAC Menus#member-area","content":" The Member Area menu makes it easy for users / visitors to be able to monitor loans that are still active and loan history. On this menu, users / visitors can also make reservations (ordering) library materials. "},{"title":"Page Translation​","type":1,"pageTitle":"OPAC Menus","url":"/docs/user-guide/OPAC/OPAC Menus#page-translation","content":" In the upper right corner of the screen, there is a flag icon that provides the SLiMS interface language. The languages that are available by default are Arabic, Bengali, Brazilian Portuguese, English, Spanish, German, Indonesian, Japanese, Thai, Malay, Persian, Russian, Turkish, Urdu. "},{"title":"OPAC Parts","type":0,"sectionRef":"#","url":"/docs/user-guide/OPAC/OPAC Parts","content":"OPAC Parts In addition to the menus discussed earlier, some of the parts contained in the new SLiMS 9 Bulian template are: Users simply select the icon according to the desired classification number. Click on the &quot;see more&quot; button to see what other classification icons look like. In this template, a list of collections that are popular with readers appears. This section can be used as a reference by patrons when deciding to read a book. This section becomes a storefront for books whose data has just been entered. Also displayed are books whose bibliographic data have improved. To facilitate information on who the readers are the most diligent in reading, this section is provided. As a form of appreciation for users for using the library as a learning medium. In the previous version, this information was provided on the Library Location menu, in SLiMS 9 Bulian, this information is displayed in a more informative display, so that users can immediately see the location and other information related to the library. Users can see information about SLiMS at a glance. In this section, the user can also search (simply). Also displayed the menus that have been previously mentioned. A donation button is also provided, if the user wants to make a donation, supporting SLiMS development work.","keywords":""},{"title":"aboutopac","type":0,"sectionRef":"#","url":"/docs/user-guide/OPAC/aboutopac","content":"","keywords":""},{"title":"SLiMS OPAC | from time-to-time​","type":1,"pageTitle":"aboutopac","url":"/docs/user-guide/OPAC/aboutopac#slims-opac--from-time-to-time","content":" Senayan 3 Stable 14 Seulanga OPAC displays menu, header, sidebar, content, and footer. The menus provided are Home, Library Information, Help on Search, Member Area, and Librarian login. The header is the SLiMS logo, title and subtitles. Then the sidebar consists of Select Language, Simple Search, Advanced Search. For content contains collections that can be accessed by the library user. While the footer is brief information about SLiMS.  OPAC on Senayan 3 Stable 15 Matoa, has no significant changes to what has been developed in OPAC on Senayan 3 Stable 14 Seulanga. There are changes at several points, including adding a background to the header, placing the Search column in the header section previously in the sidebar and changing the basic color to make it look more vibrant.  The SLiMS 5 Meranti OPAC display underwent a significant change from the two previous SLiMS versions. This is indicated by the absence of a sidebar and content from the data collection entry process. The focus of the changes is by placing the Search column in the middle of the OPAC display so that it becomes more elegant. In addition there is the addition of a top section in the form of a navbar containing social media links and new placements from Select Language.  The SLiMS 7 Cendana OPAC display just enhances what has been done on the SLiMS 5 Meranti OPAC display. Improvements produce a background with a higher resolution so that it looks more attractive. Then there are additions to the sub menu, namely Librarian which provides information related to librarians managing libraries.  OPAC display Slims 8 Akasia be more different. The SLiMS 8 Akasia OPAC looks simple but still has an elegant impression. Many changes were made to the SLiMS 8 Akasia OPAC display, including the addition of a menu logo. The menu provided is Home, Library News, Library Information, Library Location, Member Area, Librarian, Help on Search, Librarian Login, and About SLiMS, as well as a language replacement menu interface. The search column is simpler because it only provides one column but does not reduce the quality of the search results. The addition of a feature to the SLiMS 8 Akasia OPAC is a live chat feature. Then the social media placement is also changed to the footer section.  The new version, the display is made to be more fresh. Slims 9 OPAC Classic Bulian uses a template which has been optimized. In this template, update bibliographic data displayed based on the classification. Shown is also the most popular collections list, a list of the latest collection as well as updated, the list of borrowers. The menu is displayed on the header template, so immediately visible to the user. "}]